CREATE OR REPLACE VIEW IPTV.DVR_SCHEDULE_RAW_VW AS
WITH REF_TBL AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
GREATEST(ETL_UPDT_DT,ETL_INSRT_DT) AS LAST_REF_CHANGE,
COUNT(JOB_NAME) OVER (PARTITION BY IPTV_PIPELINE, JOB_EXECUTION_RANGE) AS PIPELINE_CNT
FROM IPTV.NONETL_IPTV_JOB_RELATN_REF
WHERE JOB_STATUS = 'ACTIVE'
),
REF_FLTR AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
PIPELINE_CNT
FROM REF_TBL
WHERE JOB_TYPE   = 'PROFILE'
AND   JOB_DOMAIN = 'HIVE'
AND   JOB_EXECUTION_RANGE = 'D7'
AND   IPTV_SOURCE_TABLE   = 'IPTV.DVR_SCHEDULE_RAW'
),
BDM_CONTROL AS (
SELECT
IPTV_END_CURR_MAX_VALUE,
CTL.JOB_NAME           ,
REF.JOB_EXECUTION_RANGE,
REF.IPTV_PIPELINE      ,
REF.IPTV_JOB_NAME      ,
CTL.LAST_RUN_DATE      ,
REF.PIPELINE_CNT        ,
TO_DATE(CTL.EXECUTION_START_TS) AS EXEC_DT
FROM REF_FLTR FLT
INNER JOIN REF_TBL REF
ON  FLT.IPTV_PIPELINE = REF.IPTV_PIPELINE
AND FLT.JOB_EXECUTION_RANGE = REF.JOB_EXECUTION_RANGE
INNER JOIN IPTV.NONETL_JOB_EXECUTION_CNTRL CTL
ON REF.JOB_NAME = CTL.JOB_NAME
AND CTL.EXECUTION_STATUS = 'SUCCEEDED'
WHERE CTL.ETL_INSRT_DT >= REF.LAST_REF_CHANGE 
),
BDM_CONTROL_CNT AS (
SELECT IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT, COUNT(DISTINCT JOB_NAME) AS TOTAL_SUCCESS_CNT
FROM BDM_CONTROL
GROUP BY IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT
),
COMPLETED_CYCLES AS (
SELECT
A.JOB_NAME     ,
A.IPTV_JOB_NAME,
MAX(IPTV_END_CURR_MAX_VALUE) AS MAXVAL_OF_LAST_FIN_CYCLE,
MAX(LAST_RUN_DATE)           AS RUNDT_OF_LAST_FIN_CYCLE
FROM BDM_CONTROL_CNT B
INNER JOIN BDM_CONTROL A
ON A.IPTV_PIPELINE = B.IPTV_PIPELINE
AND A.JOB_EXECUTION_RANGE = B.JOB_EXECUTION_RANGE
AND A.EXEC_DT = B.EXEC_DT
WHERE B.TOTAL_SUCCESS_CNT >= A.PIPELINE_CNT
AND A.JOB_NAME in (SELECT JOB_NAME FROM REF_FLTR)
GROUP BY A.JOB_NAME,A.IPTV_JOB_NAME
),
CFW AS (
SELECT 
COALESCE(TO_DATE(DATE_SUB(CTL.RUNDT_OF_LAST_FIN_CYCLE,7)),TO_DATE(DATE_SUB(CURRENT_DATE(),8))) AS MIN_VALUE,
TO_DATE(DATE_SUB(CURRENT_DATE(),7))                                                            AS MAX_VALUE
FROM REF_FLTR REF
LEFT OUTER JOIN COMPLETED_CYCLES CTL
ON REF.JOB_NAME = CTL.JOB_NAME
)
SELECT 
`TIMESTAMP` ,
UUID ,
HOSTNAME ,
TRACEID ,
SPANID ,
PARENTSPANID ,
SPANNAME ,
APPNAME ,
STARTTIME ,
SPANDURATION ,
SPANSUCCESS ,
ATTRIBUTES ,
PARTNER ,
EVENTTIMESTAMP ,
DESCRIPTION ,
RECEIVERID ,
DEVICEID ,
DEVICESOURCEID ,
ACCOUNT ,
ACCOUNTSOURCEID ,
MACADDRESS ,
ECMMACADDRESS ,
FIRMWAREVERSION ,
DEVICETYPE ,
DEVICE_PARTNER,
IPADDRESS ,
UTCOFFSET ,
FULLSCHEDULE ,
RECORDINGID ,
ACCOUNTID ,
RECORDINGS_DEVICEID,
TITLE ,
RECORDINGS_STARTTIME,
DURATION ,
LISTINGID ,
STATIONID ,
SERIESID ,
ENTITYID ,
PROGRAMID ,
CHANNELID ,
CHANNELNUMBER ,
STATUS ,
ERROR ,
HDP_FILE_NAME ,
HDP_CREATE_TS ,
HDP_UPDATE_TS,
RECEIVED_DATE
FROM (
SELECT 
R.HEADER.`TIMESTAMP` ,
R.HEADER.UUID ,
R.HEADER.HOSTNAME ,
R.HEADER.MONEY.TRACEID ,
R.HEADER.MONEY.SPANID ,
R.HEADER.MONEY.PARENTSPANID ,
R.HEADER.MONEY.SPANNAME ,
R.HEADER.MONEY.APPNAME ,
R.HEADER.MONEY.STARTTIME ,
R.HEADER.MONEY.SPANDURATION ,
R.HEADER.MONEY.SPANSUCCESS ,
R.HEADER.MONEY.ATTRIBUTES ,
R.PARTNER ,
R.EVENTTIMESTAMP ,
R.DESCRIPTION ,
R.DEVICE.RECEIVERID ,
R.DEVICE.DEVICEID ,
R.DEVICE.DEVICESOURCEID ,
R.DEVICE.ACCOUNT ,
R.DEVICE.ACCOUNTSOURCEID ,
R.DEVICE.MACADDRESS ,
R.DEVICE.ECMMACADDRESS ,
R.DEVICE.FIRMWAREVERSION ,
R.DEVICE.DEVICETYPE ,
R.DEVICE.PARTNER AS DEVICE_PARTNER,
R.DEVICE.IPADDRESS ,
R.DEVICE.UTCOFFSET ,
R.FULLSCHEDULE ,
R.RECORDINGS.RECORDINGID ,
R.RECORDINGS.ACCOUNTID ,
R.RECORDINGS.DEVICEID AS RECORDINGS_DEVICEID,
R.RECORDINGS.TITLE ,
R.RECORDINGS.STARTTIME AS RECORDINGS_STARTTIME,
R.RECORDINGS.DURATION ,
R.RECORDINGS.LISTINGID ,
R.RECORDINGS.STATIONID ,
R.RECORDINGS.SERIESID ,
R.RECORDINGS.ENTITYID ,
R.RECORDINGS.PROGRAMID ,
R.RECORDINGS.CHANNELID ,
R.RECORDINGS.CHANNELNUMBER ,
R.RECORDINGS.STATUS ,
R.RECORDINGS.ERROR ,
R.HDP_FILE_NAME ,
R.HDP_CREATE_TS ,
R.HDP_UPDATE_TS,
R.RECEIVED_DATE,
ROW_NUMBER() OVER (PARTITION BY R.HEADER.UUID ORDER BY R.HEADER.`TIMESTAMP` DESC) AS RNK,
TO_DATE(FROM_UNIXTIME(CAST(R.HEADER.`TIMESTAMP`/1000 AS BIGINT))) AS RAW_EVENT_DATE
FROM CFW, IPTV.DVR_SCHEDULE_RAW R
WHERE TO_DATE(FROM_UNIXTIME(CAST(R.HEADER.`TIMESTAMP`/1000 AS BIGINT))) >= CFW.MIN_VALUE
AND   TO_DATE(FROM_UNIXTIME(CAST(R.HEADER.`TIMESTAMP`/1000 AS BIGINT))) <  CFW.MAX_VALUE
) COMPACT
WHERE RNK = 1
;

