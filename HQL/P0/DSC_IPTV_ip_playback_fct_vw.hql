CREATE OR REPLACE VIEW IPTV.IP_PLAYBACK_FCT_VW AS
WITH REF_TBL AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
GREATEST(ETL_UPDT_DT,ETL_INSRT_DT) AS LAST_REF_CHANGE,
COUNT(JOB_NAME) OVER (PARTITION BY IPTV_PIPELINE, JOB_EXECUTION_RANGE) AS PIPELINE_CNT
FROM IPTV.NONETL_IPTV_JOB_RELATN_REF
WHERE JOB_STATUS = 'ACTIVE'
),
REF_FLTR AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
PIPELINE_CNT
FROM REF_TBL
WHERE JOB_TYPE   = 'PROFILE'
AND   JOB_DOMAIN = 'HIVE'
AND   JOB_EXECUTION_RANGE = 'D7'
AND   IPTV_SOURCE_TABLE   = 'IPTV.IP_PLAYBACK_FCT'
),
BDM_CONTROL AS (
SELECT
IPTV_END_CURR_MAX_VALUE,
CTL.JOB_NAME           ,
REF.JOB_EXECUTION_RANGE,
REF.IPTV_PIPELINE      ,
REF.IPTV_JOB_NAME      ,
CTL.LAST_RUN_DATE      ,
REF.PIPELINE_CNT        ,
TO_DATE(CTL.EXECUTION_START_TS) AS EXEC_DT
FROM REF_FLTR FLT
INNER JOIN REF_TBL REF
ON  FLT.IPTV_PIPELINE = REF.IPTV_PIPELINE
AND FLT.JOB_EXECUTION_RANGE = REF.JOB_EXECUTION_RANGE
INNER JOIN IPTV.NONETL_JOB_EXECUTION_CNTRL CTL
ON REF.JOB_NAME = CTL.JOB_NAME
AND CTL.EXECUTION_STATUS = 'SUCCEEDED'
WHERE CTL.ETL_INSRT_DT >= REF.LAST_REF_CHANGE 
),
BDM_CONTROL_CNT AS (
SELECT IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT, COUNT(DISTINCT JOB_NAME) AS TOTAL_SUCCESS_CNT
FROM BDM_CONTROL
GROUP BY IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT
),
COMPLETED_CYCLES AS (
SELECT
A.JOB_NAME     ,
A.IPTV_JOB_NAME,
MAX(IPTV_END_CURR_MAX_VALUE) AS MAXVAL_OF_LAST_FIN_CYCLE,
MAX(LAST_RUN_DATE)           AS RUNDT_OF_LAST_FIN_CYCLE
FROM BDM_CONTROL_CNT B
INNER JOIN BDM_CONTROL A
ON A.IPTV_PIPELINE = B.IPTV_PIPELINE
AND A.JOB_EXECUTION_RANGE = B.JOB_EXECUTION_RANGE
AND A.EXEC_DT = B.EXEC_DT
WHERE B.TOTAL_SUCCESS_CNT >= A.PIPELINE_CNT
AND A.JOB_NAME in (SELECT JOB_NAME FROM REF_FLTR)
GROUP BY A.JOB_NAME,A.IPTV_JOB_NAME
),
CFW AS (
SELECT 
COALESCE(TO_DATE(DATE_SUB(CTL.RUNDT_OF_LAST_FIN_CYCLE,7)),TO_DATE(DATE_SUB(CURRENT_DATE(),8))) AS MIN_VALUE,
TO_DATE(DATE_SUB(CURRENT_DATE(),7))                                                            AS MAX_VALUE
FROM REF_FLTR REF
LEFT OUTER JOIN COMPLETED_CYCLES CTL
ON REF.JOB_NAME = CTL.JOB_NAME
)
SELECT 
F.HEADER.UUID,
F.HEADER.VERSIONNUM,
F.HEADER.`TIMESTAMP`,
F.HEADER.PARTNER,
F.HEADER.HOSTNAME,
F.EVENTTYPE,
F.SESSIONID,
F.STARTTIME,
F.ENDTIME,
F.DEVICE.DEVICEID,
F.DEVICE.DEVICESOURCEID,
F.DEVICE.ACCOUNT,
F.DEVICE.ACCOUNTSOURCEID,
F.DEVICE.APPNAME,
F.DEVICE.APPVERSION,
F.DEVICE.IPADDRESS,
F.DEVICE.ISP,
F.DEVICE.NETWORKLOCATION,
F.DEVICE.USERAGENT,
F.ASSET.PROGRAMID,
F.ASSET.MEDIAGUID,
F.ASSET.PROVIDERID,
F.ASSET.ASSETID,
F.ASSET.ASSETCONTENTID,
F.ASSET.MEDIAID,
F.ASSET.PLATFORMID,
F.ASSET.RECORDINGID,
F.ASSET.STREAMID,
F.ASSET.TITLE,
F.ASSETCLASS,
F.REGULATORYTYPE,
F.SESSIONDURATION,
F.COMPLETIONSTATUS,
F.PLAYBACKTYPE,
F.PLAYBACKSTARTED,
F.LEASEINFO.STARTOFWINDOW,
F.LEASEINFO.ENDOFWINDOW,
F.LEASEINFO.PURCHASETIME,
F.LEASEINFO.LEASELENGTH,
F.LEASEINFO.LEASEID,
F.LEASEINFO.LEASEPRICE,
F.FIRSTASSETPOSITION,
F.LASTASSETPOSITION,
F.DRMLATENCY,
F.OPENLATENCY,
F.TRICKPLAYEVENTS.EVENTKEY,
F.FRAGMENTWARNINGEVENTS.OFFSETS,
F.FRAMERATEMIN,
F.FRAMERATEMAX,
F.BITRATEMIN,
F.BITRATEMAX,
F.ERROREVENTS.OFFSET,
F.ERROREVENTS.MESSAGE,
F.ERROREVENTS.CODE,
F.ERROREVENTS.ERRORTYPE,
F.HDP_FILE_NAME,
F.HDP_CREATE_TS,
F.HDP_UPDATE_TS,
F.EVENT_DATE
FROM CFW,IPTV.IP_PLAYBACK_FCT F
WHERE TO_DATE(F.EVENT_DATE) >= CFW.MIN_VALUE
AND TO_DATE(F.EVENT_DATE)   <  CFW.MAX_VALUE
AND TO_DATE(F.EVENT_DATE)   >= TO_DATE(DATE_SUB(CURRENT_DATE(),30))
AND (F.ASSET.PROVIDERID IS NULL OR UPPER(F.ASSET.PROVIDERID) NOT LIKE 'PPV_%')
;

