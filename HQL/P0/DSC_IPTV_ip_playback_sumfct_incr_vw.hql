CREATE OR REPLACE VIEW IPTV.IP_PLAYBACK_SUMFCT_INCR_VW AS 
WITH REF_TBL AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
GREATEST(ETL_UPDT_DT,ETL_INSRT_DT) AS LAST_REF_CHANGE,
COUNT(JOB_NAME) OVER (PARTITION BY IPTV_PIPELINE, JOB_EXECUTION_RANGE) AS PIPELINE_CNT
FROM IPTV.NONETL_IPTV_JOB_RELATN_REF
WHERE JOB_STATUS = 'ACTIVE'
),
REF_FLTR AS (
SELECT
JOB_NAME           ,
JOB_TYPE           ,
JOB_DOMAIN         ,
JOB_STATUS         ,
JOB_EXECUTION_RANGE,
IPTV_PIPELINE      ,
IPTV_JOB_NAME      ,
IPTV_SOURCE_TABLE  ,
PIPELINE_CNT
FROM REF_TBL
WHERE JOB_TYPE   = 'PROFILE'
AND   JOB_DOMAIN = 'HIVE'
AND   JOB_EXECUTION_RANGE = 'D1'
AND   IPTV_SOURCE_TABLE   = 'IPTV.IP_PLAYBACK_SUMFCT'
),
BDM_CONTROL AS (
SELECT
IPTV_END_CURR_MAX_VALUE,
CTL.JOB_NAME           ,
REF.JOB_EXECUTION_RANGE,
REF.IPTV_PIPELINE      ,
REF.IPTV_JOB_NAME      ,
CTL.LAST_RUN_DATE      ,
REF.PIPELINE_CNT        ,
TO_DATE(CTL.EXECUTION_START_TS) AS EXEC_DT
FROM REF_FLTR FLT
INNER JOIN REF_TBL REF
ON  FLT.IPTV_PIPELINE = REF.IPTV_PIPELINE
AND FLT.JOB_EXECUTION_RANGE = REF.JOB_EXECUTION_RANGE
INNER JOIN IPTV.NONETL_JOB_EXECUTION_CNTRL CTL
ON REF.JOB_NAME = CTL.JOB_NAME
AND CTL.EXECUTION_STATUS = 'SUCCEEDED'
WHERE CTL.ETL_INSRT_DT >= REF.LAST_REF_CHANGE 
),
BDM_CONTROL_CNT AS (
SELECT IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT, COUNT(DISTINCT JOB_NAME) AS TOTAL_SUCCESS_CNT
FROM BDM_CONTROL
GROUP BY IPTV_PIPELINE, JOB_EXECUTION_RANGE, EXEC_DT
),
COMPLETED_CYCLES AS (
SELECT
A.JOB_NAME     ,
A.IPTV_JOB_NAME,
MAX(IPTV_END_CURR_MAX_VALUE) AS MAXVAL_OF_LAST_FIN_CYCLE,
MAX(LAST_RUN_DATE)           AS RUNDT_OF_LAST_FIN_CYCLE
FROM BDM_CONTROL_CNT B
INNER JOIN BDM_CONTROL A
ON A.IPTV_PIPELINE = B.IPTV_PIPELINE
AND A.JOB_EXECUTION_RANGE = B.JOB_EXECUTION_RANGE
AND A.EXEC_DT = B.EXEC_DT
WHERE B.TOTAL_SUCCESS_CNT >= A.PIPELINE_CNT
AND A.JOB_NAME in (SELECT JOB_NAME FROM REF_FLTR)
GROUP BY A.JOB_NAME,A.IPTV_JOB_NAME
),
GLGN_CTL AS (
SELECT
RCF.JOB_NAME AS GLGN_JOB_NAME,
CAST(RCF.DELTA_COL_PREV_MAX_VALUE AS TIMESTAMP) AS ETL_MIN_VALUE,
CAST(RCF.DELTA_COL_CURR_MAX_VALUE AS TIMESTAMP) AS ETL_MAX_VALUE
FROM REF_FLTR FLT
INNER JOIN CFW_HDP.GLGN_JOB_EXECUTION RCF
ON RCF.JOB_NAME = FLT.IPTV_JOB_NAME
WHERE execution_status = 'SUCCEEDED'
),
CFW AS (
SELECT
ETL.GLGN_JOB_NAME,
MIN(TO_DATE(ETL_MIN_VALUE)) AS MIN_VALUE,
MAX(TO_DATE(ETL_MAX_VALUE)) AS MAX_VALUE,
MIN(ETL_MIN_VALUE) AS MIN_VALUE_TS,
MAX(ETL_MAX_VALUE) AS MAX_VALUE_TS
FROM GLGN_CTL ETL
LEFT OUTER JOIN COMPLETED_CYCLES CTL
ON ETL.GLGN_JOB_NAME = CTL.IPTV_JOB_NAME
WHERE ETL.ETL_MIN_VALUE >= CTL.MAXVAL_OF_LAST_FIN_CYCLE
OR    ETL.ETL_MAX_VALUE >= CURRENT_DATE()
GROUP BY ETL.GLGN_JOB_NAME
),
RAW_FILTERED AS (
SELECT
R.HEADER.UUID,
R.HEADER.`TIMESTAMP`,
R.RECEIVED_DATE,
TO_DATE(FROM_UNIXTIME(CAST(R.HEADER.`TIMESTAMP`/1000 AS BIGINT))) AS RAW_EVENT_DATE,
R.HDP_CREATE_TS, 
R.HDP_UPDATE_TS,
CFW.MIN_VALUE_TS,
CFW.MAX_VALUE_TS,
ROW_NUMBER() OVER (PARTITION BY R.HEADER.UUID ORDER BY R.HEADER.`TIMESTAMP` DESC) AS RNK
FROM CFW,IPTV.IP_PLAYBACK_RAW R
WHERE UPPER(R.EVENTTYPE) = 'END'
AND   R.RECEIVED_DATE >= CFW.MIN_VALUE
AND   R.RECEIVED_DATE <= CFW.MAX_VALUE
AND   R.HDP_CREATE_TS >  CFW.MIN_VALUE_TS
AND   R.HDP_CREATE_TS <= CFW.MAX_VALUE_TS
)
SELECT 
F.UUID, 
F.ROGERS_ACCOUNT_ID, 
F.COMCAST_ACCOUNT_ID, 
F.ROGERS_DEVICE_ID, 
F.COMCAST_DEVICE_ID, 
F.COMCAST_SESSION_ID, 
F.SESSION_START_TS, 
F.SESSION_END_TS, 
F.APP_NAME, 
F.APP_VERSION_NUM, 
F.IPADDRESS_NUM, 
F.ISP_NAME, 
F.NETWORK_LOCATION_NAME, 
F.USER_AGENT_NAME, 
F.ASSET_ID, 
F.ASSET_CLASS_CD, 
F.MEDIA_GUID, 
F.PROVIDER_ID, 
F.ASSET_CONTENT_ID, 
F.PROGRAM_ID, 
F.MERLIN_RECORDING_ID, 
F.MERLIN_STREAM_ID, 
F.COMPASS_STREAM_ID, 
F.SESSION_DURATION_COUNT, 
F.COMPLETION_STATUS_CD, 
F.PLAYBACK_TYPE_CD, 
F.TRICKPLAY_REWIND_COUNT, 
F.TRICKPLAY_FF_COUNT, 
F.TRICKPLAY_PAUSE_COUNT, 
F.TRICKPLAY_PLAY_COUNT, 
F.PLAYBACK_STARTED_FLAG, 
F.FIRST_ASSET_POSITION_NUM, 
F.LAST_ASSET_POSITION_NUM, 
F.DRM_LATENCY_NUM, 
F.OPEN_LATENCY_NUM, 
F.TRICKPLAY_EVENTS_NUM, 
F.FRAGMENT_WARNING_EVENTS_NUM, 
F.FRAME_RATE_MIN_NUM, 
F.FRAME_RATE_MAX_NUM, 
F.BIT_RATE_MIN_NUM, 
F.BIT_RATE_MAX_NUM, 
F.HDP_CREATE_TS, 
F.HDP_UPDATE_TS, 
F.EVENT_DATE,
R.RECEIVED_DATE,
R.RAW_EVENT_DATE,
R.HDP_CREATE_TS AS RAW_HDP_CREATE_TS,
R.HDP_UPDATE_TS AS RAW_HDP_UPDATE_TS,
R.MIN_VALUE_TS  AS CFW_MIN_VALUE_TS,
R.MAX_VALUE_TS  AS CFW_MAX_VALUE_TS
FROM RAW_FILTERED R
INNER JOIN IPTV.IP_PLAYBACK_SUMFCT F
ON F.UUID = R.UUID
--AND F.EVENT_DATE = R.RAW_EVENT_DATE
WHERE R.RNK = 1
AND TO_DATE(F.EVENT_DATE) >  TO_DATE(DATE_SUB(CURRENT_DATE(),9))
AND TO_DATE(F.EVENT_DATE) >= TO_DATE(DATE_SUB(CURRENT_DATE(),30))
AND (F.PROVIDER_ID IS NULL OR UPPER(F.PROVIDER_ID) NOT LIKE 'PPV_%')
;

