set hive.execution.engine=tez;

!echo Parms to Hive Script: filename='${hiveconf:file_name}';

create external table if not exists ext_cdrdm.ISMS_REVOLTION_NOTIFICATION(
EVENT_TIME	STRING,
NME_CLASS	STRING,
NME_TYPE	STRING,
CTN	STRING  ,
BAN	STRING  ,
SUBSCRIBER_TYPE	STRING,
TX_TYPE	STRING,
SESSION_ID	STRING,
BRAND	STRING,
SUBSCRIBER_ID	STRING,
LANGUAGE	STRING,
LOCATION	STRING,
ACCIDENTAL_TYPE	STRING,
CAMPAIGN_ID	STRING,
LEFT_RETRY	STRING,
RETRY_REASON	STRING,
MESSAGE_ID	STRING,
REPLYSMS	STRING,
BAN_CLASSIFICATION	STRING,
SMS_CREATEDATE	STRING,
PROVISION_INTERFACE	STRING,
SOCCODE	STRING,
ERRORCODE	STRING,
ERRORMESSAGE	STRING,
ROGERSCAMPAIGN_ATTR1	STRING,
ROGERSCAMPAIGN_ATTR2	STRING,
ROGERSCAMPAIGN_ATTR3	STRING,
ROGERSCAMPAIGN_ATTR4	STRING,
PARAMETERS	STRING,
SMS_DELIVERYDATE	STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES ('separatorChar' ='\,')
STORED AS TEXTFILE
LOCATION '${hiveconf:file_name}'
tblproperties("skip.header.line.count"="1");

create table if not exists CDRDM.ISMS_REVOLTION_NOTIFICATION
(
EVENT_TIME	STRING,
NME_CLASS	STRING,
NME_TYPE	STRING,
CTN	STRING  ,
BAN	STRING  ,
SUBSCRIBER_TYPE	STRING,
TX_TYPE	STRING,
SESSION_ID	STRING,
BRAND	STRING,
SUBSCRIBER_ID	STRING,
LANGUAGE	STRING,
LOCATION	STRING,
ACCIDENTAL_TYPE	STRING,
CAMPAIGN_ID	STRING,
LEFT_RETRY	STRING,
RETRY_REASON	STRING,
MESSAGE_ID	STRING,
REPLYSMS	STRING,
BAN_CLASSIFICATION	STRING,
SMS_CREATEDATE	STRING,
PROVISION_INTERFACE	STRING,
SOCCODE	STRING,
ERRORCODE	STRING,
ERRORMESSAGE	STRING,
ROGERSCAMPAIGN_ATTR1	STRING,
ROGERSCAMPAIGN_ATTR2	STRING,
ROGERSCAMPAIGN_ATTR3	STRING,
ROGERSCAMPAIGN_ATTR4	STRING,
PARAMETERS	STRING,
SMS_DELIVERYDATE	STRING,
FILE_NAME    STRING,
HDP_CREATED_TS TIMESTAMP
)
partitioned by (EVENT_DATE DATE)
stored as ORC;

!echo loading the table CDRDM.ISMS_REVOLTION_NOTIFICATION;

INSERT INTO TABLE CDRDM.ISMS_REVOLTION_NOTIFICATION PARTITION(EVENT_DATE)
SELECT
EVENT_TIME          ,
NME_CLASS           ,
NME_TYPE            ,
CTN	                ,
BAN	                ,
SUBSCRIBER_TYPE     ,
TX_TYPE             ,
SESSION_ID          ,
BRAND               ,
SUBSCRIBER_ID       ,
LANGUAGE            ,
LOCATION            ,
ACCIDENTAL_TYPE     ,
CAMPAIGN_ID         ,
LEFT_RETRY          ,
RETRY_REASON        ,
MESSAGE_ID          ,
REPLYSMS            ,
BAN_CLASSIFICATION  ,
SMS_CREATEDATE      ,
PROVISION_INTERFACE ,
SOCCODE             ,
ERRORCODE           ,
ERRORMESSAGE        ,
ROGERSCAMPAIGN_ATTR1,
ROGERSCAMPAIGN_ATTR2,
ROGERSCAMPAIGN_ATTR3,
ROGERSCAMPAIGN_ATTR4,
PARAMETERS          ,
SMS_DELIVERYDATE	,
trim(regexp_extract(input__file__name,'[^/]+$', 0)),
current_timestamp,
cast(substring(from_unixtime(unix_timestamp(EVENT_TIME,'MM/dd/yyyy')),1,10) as date) as EVENT_DATE
FROM
ext_cdrdm.ISMS_REVOLTION_NOTIFICATION;
