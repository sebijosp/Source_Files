DROP TABLE IF EXISTS data_pods.ch_pod_acct_dly;
CREATE TABLE data_pods.ch_pod_acct_dly (
  enterprise_id varchar(50),
  customer_id bigint,
  customer_account bigint,
  cr_key varchar(50),
  customer_location_id bigint,
  tv_discount double,
  internet_discount double,
  tv_rev double,
  rhp_rev double,
  internet_rev double,
  tv_rev_gr decimal(38, 2),
  internet_rev_gr decimal(38, 2),
  rhp_rev_gr decimal(38, 2),
  age int,
  postal_code varchar(6),
  num_stb int,
  tenure_month_tv bigint,
  tenure_year_tv bigint,
  product_source varchar(20),
  flg_in_cablefootprint int,
  flg_out_cablefootprint int,
  flg_tv int,
  flg_rhp int,
  flg_shm int,
  flg_internet int,
  flg_selfserv int,
  flg_analog_tv int,
  rhp_mins_local bigint,
  rhp_mins_ld bigint,
  flg_tv_add_tmn int,
  tv_add_num_themepk int,
  avg_tv_dur_hrs_kids_fmly decimal(38, 2),
  avg_tv_dur_hrs_life_real decimal(38, 2),
  avg_tv_dur_hrs_movies decimal(38, 2),
  avg_tv_dur_hrs_multicul decimal(38, 2),
  avg_tv_dur_hrs_shop decimal(38, 2),
  avg_tv_dur_hrs_spirit decimal(38, 2),
  avg_tv_dur_hrs_sports decimal(38, 2),
  avg_tv_num_channel decimal(38, 2),
  avg_tv_num_genre decimal(38, 2),
  avg_tv_dur_hrs_200 decimal(38, 2),
  avg_tv_dur_hrs_600 decimal(38, 2),
  avg_tv_dur_hrs_1000 decimal(38, 2),
  avg_tv_dur_hrs_1630 decimal(38, 2),
  avg_tv_dur_hrs_1930 decimal(38, 2),
  avg_tv_dur_hrs_2300 decimal(38, 2),
  avg_tv_dur_hrs_cannetwork decimal(38, 2),
  avg_tv_dur_hrs_unknown decimal(38, 2),
  avg_tv_dur_hrs_weekday decimal(38, 2),
  avg_tv_dur_hrs_weekend decimal(38, 2),
  avg_tv_num_day_view decimal(38, 2),
  avg_tv_ttl_dur_hrs_mly decimal(38, 2),
  avg_rod_cnt_children decimal(38, 2),
  avg_rod_cnt_comedy decimal(38, 2),
  avg_rod_cnt_drama decimal(38, 2),
  avg_rod_cnt_family decimal(38, 2),
  internet_mly_usage_actual decimal(38, 2),
  internet_mly_usage_entitled decimal(38, 2),
  flg_int_10to19mbps int ) 
PARTITIONED BY (
  calendar_year int,
  calendar_month int,
  process_date string ) ;
  
DROP TABLE IF EXISTS data_pods.ch_pod_anchseg_acct_dly;
 CREATE TABLE data_pods.ch_pod_anchseg_acct_dly (
  enterprise_id varchar(50),
  tv_discount double,
  internet_discount double,
  tv_rev double,
  rhp_rev double,
  internet_rev double,
  tv_rev_gr decimal(38, 2),
  internet_rev_gr decimal(38, 2),
  rhp_rev_gr decimal(38, 2),
  age int,
  postal_code varchar(6),
  num_stb int,
  tenure_month_tv bigint,
  tenure_year_tv bigint,
  product_source varchar(20),
  flg_in_cablefootprint int,
  flg_out_cablefootprint int,
  flg_tv int,
  flg_rhp int,
  flg_shm int,
  flg_internet int,
  flg_selfserv int,
  flg_analog_tv int,
  rhp_mins_local decimal(38, 2),
  rhp_mins_ld decimal(38, 2),
  flg_tv_add_tmn int,
  tv_add_num_themepk int,
  avg_tv_dur_hrs_kids_fmly decimal(38, 2),
  avg_tv_dur_hrs_life_real decimal(38, 2),
  avg_tv_dur_hrs_movies decimal(38, 2),
  avg_tv_dur_hrs_multicul decimal(38, 2),
  avg_tv_dur_hrs_shop decimal(38, 2),
  avg_tv_dur_hrs_spirit decimal(38, 2),
  avg_tv_dur_hrs_sports decimal(38, 2),
  avg_tv_num_channel decimal(38, 2),
  avg_tv_num_genre decimal(38, 2),
  avg_tv_dur_hrs_200 decimal(38, 2),
  avg_tv_dur_hrs_600 decimal(38, 2),
  avg_tv_dur_hrs_1000 decimal(38, 2),
  avg_tv_dur_hrs_1630 decimal(38, 2),
  avg_tv_dur_hrs_1930 decimal(38, 2),
  avg_tv_dur_hrs_2300 decimal(38, 2),
  avg_tv_dur_hrs_cannetwork decimal(38, 2),
  avg_tv_dur_hrs_unknown decimal(38, 2),
  avg_tv_dur_hrs_weekday decimal(38, 2),
  avg_tv_dur_hrs_weekend decimal(38, 2),
  avg_tv_num_day_view decimal(38, 2),
  avg_tv_ttl_dur_hrs_mly decimal(38, 2),
  avg_rod_cnt_children decimal(38, 2),
  avg_rod_cnt_comedy decimal(38, 2),
  avg_rod_cnt_drama decimal(38, 2),
  avg_rod_cnt_family decimal(38, 2),
  internet_mly_usage_actual decimal(38, 2),
  internet_mly_usage_entitled bigint,
  flg_int_10to19mbps int ) 
PARTITIONED BY (
  calendar_year int,
  calendar_month int,
  process_date string ) ;

DROP TABLE IF EXISTS data_pods.wl_pod_pro_acct_dly;  
 CREATE TABLE data_pods.wl_pod_pro_acct_dly (
  ecid varchar(20),
  ban varchar(20),
  subscriber_no varchar(50),
  flg_rogers_wireless int,
  flg_fido_wireless int,
  age int,
  postal_code varchar(6),
  device_model varchar(80),
  contract_status varchar(16),
  rog_wl_cnt_postp_apple int,
  rog_wl_cnt_postp_rci_dev int,
  discount_rc decimal(38,2),
  plan_rc decimal(38,2),
  pp_prod_type varchar(30),
  rogers_start_date string,
  fido_start_date string,
  rogers_end_date string,
  fido_end_date string,
  tenure_months_rog_wl int,
  tenure_months_fido_wl int,
  rog_wlrev_voice_msf double,
  rog_wl_cnt_ctn_postpaid int,
  curr_other int,
  flg_chatr int,
  flg_selfserv int,
  flg_in_cablefootprint int,
  flg_out_cablefootprint int,
  rog_wl_sms_mms decimal(20,0),
  rog_wl_mins_roaming decimal(38,10),
  fido_wl_sms_mms decimal(20,0),
  fido_wl_mins_roaming decimal(38, 10),
  rog_wl_kbs_data decimal(38,2),
  fido_wl_kbs_data decimal(38,2),
  rog_wl_mins_local decimal(38,2),
  fido_wl_mins_local decimal(38,2),
  rog_wl_kbs_dataroaming decimal(38,2),
  rog_wlrev_adjdis decimal(38,2),
  rog_wlrev_adj_discount decimal(38,2),
  rog_wlrev_data_msf decimal(38,2),
  rog_wlrev_gr_ttl_net_rev decimal(38,10),
  rog_wlrev_gr_ttl_net_rev_prev decimal(38,10),
  fido_wlrev_data_msf decimal(38,2),
  fido_wlrev_gr_ttl_net_rev decimal(38,10),
  fido_wlrev_gr_ttl_net_rev_prev decimal(38,10),
  fido_wlrev_net_rev_wl decimal(38,2),
  fido_wlrev_ttl_net_rev decimal(38,2),
  rog_wlrev_net_rev_wl decimal(38,2),
  rog_wlrev_ttl_net_rev decimal(38,2),
  rog_wlrev_options decimal(38,2),
  rog_wlrev_data_overage decimal(38,2),
  rog_wlrev_voice_roaming decimal(38,2),
  avg_num_serv_call decimal(38,2))
  PARTITIONED BY (
  calendar_year int,
  calendar_month int,
  process_date string ) ;
 
DROP TABLE IF EXISTS data_pods.wl_pod_anchseg_acct_dly; 
CREATE TABLE data_pods.wl_pod_anchseg_acct_dly (
  ecid varchar(20),
  avg_num_serv_call decimal(38, 2),
  curr_other int,
  fido_wl_kbs_data decimal(38, 2),
  flg_chatr int,
  flg_fido_wireless int,
  fido_wl_mins_local bigint,
  fido_wl_mins_roaming bigint,
  fido_wl_sms_mms decimal(20, 0),
  flg_rogers_wireless int,
  fido_wlrev_data_msf decimal(38, 2),
  fido_wlrev_gr_ttl_net_rev decimal(38, 2),
  fido_wlrev_net_rev_wl decimal(38, 2),
  fido_wlrev_ttl_net_rev decimal(38, 2),
  rog_wl_cnt_ctn_postpaid int,
  rog_wl_cnt_postp_apple decimal(20, 0),
  rog_wl_cnt_postp_rci_dev decimal(20, 0),
  rog_wl_kbs_data decimal(38, 2),
  rog_wl_kbs_dataroaming decimal(38, 2),
  rog_wl_mins_local bigint,
  rog_wl_mins_roaming bigint,
  rog_wl_sms_mms decimal(20, 0),
  rog_wlrev_adjdis decimal(38, 2),
  rog_wlrev_adj_discount decimal(38, 2),
  rog_wlrev_data_msf decimal(38, 2),
  rog_wlrev_data_overage decimal(38, 2),
  rog_wlrev_gr_ttl_net_rev decimal(38, 2),
  rog_wlrev_net_rev_wl decimal(38, 2),
  rog_wlrev_options decimal(38, 2),
  rog_wlrev_ttl_net_rev decimal(38, 2),
  rog_wlrev_voice_msf decimal(38, 2),
  rog_wlrev_voice_roaming decimal(38, 2),
  tenure_months_fido_wl bigint,
  tenure_months_rog_wl bigint,
  age int,
  postal_code varchar(6),
  flg_in_cablefootprint int,
  flg_out_cablefootprint int,
  flg_selfserv int ) 
PARTITIONED BY (
  calendar_year int,
  calendar_month int,
  process_date string ) ;

DROP TABLE IF EXISTS data_pods.anchor_segmentation_acct_dly;  
CREATE TABLE data_pods.anchor_segmentation_acct_dly (
  ecid varchar(20),
  avg_num_serv_call decimal(38, 2),
  curr_other int,
  fido_wl_kbs_data decimal(38, 2),
  flg_chatr int,
  flg_fido_wireless int,
  fido_wl_mins_local bigint,
  fido_wl_mins_roaming bigint,
  fido_wl_sms_mms decimal(20, 0),
  flg_rogers_wireless int,
  fido_wlrev_data_msf decimal(20, 0),
  fido_wlrev_gr_ttl_net_rev decimal(38, 2),
  fido_wlrev_net_rev_wl decimal(38, 2),
  fido_wlrev_ttl_net_rev decimal(38, 2),
  rog_wl_cnt_ctn_postpaid int,
  rog_wl_cnt_postp_apple decimal(20, 0),
  rog_wl_cnt_postp_rci_dev decimal(20, 0),
  rog_wl_kbs_data decimal(38, 2),
  rog_wl_kbs_dataroaming decimal(38, 2),
  rog_wl_mins_local bigint,
  rog_wl_mins_roaming bigint,
  rog_wl_sms_mms decimal(20, 0),
  rog_wlrev_adjdis decimal(20, 0),
  rog_wlrev_adj_discount decimal(20, 0),
  rog_wlrev_data_msf decimal(38, 2),
  rog_wlrev_data_overage decimal(38, 2),
  rog_wlrev_gr_ttl_net_rev decimal(38, 2),
  rog_wlrev_net_rev_wl decimal(38, 2),
  rog_wlrev_options decimal(38, 2),
  rog_wlrev_ttl_net_rev decimal(38, 2),
  rog_wlrev_voice_msf decimal(20, 0),
  rog_wlrev_voice_roaming decimal(20, 0),
  tenure_months_fido_wl bigint,
  tenure_months_rog_wl bigint,
  tv_discount double,
  internet_discount double,
  tv_rev double,
  rhp_rev double,
  internet_rev double,
  tv_rev_gr decimal(38, 10),
  internet_rev_gr decimal(38, 10),
  rhp_rev_gr decimal(38, 10),
  age int,
  adr_postal_code varchar(6),
  num_stb int,
  tenure_months_tv bigint,
  tv_cust_tenure_year bigint,
  product_source varchar(20),
  flg_in_cablefootprint int,
  flg_out_cablefootprint int,
  flg_tv int,
  flg_rhp int,
  flg_shm int,
  flg_internet int,
  flg_selfserv int,
  flg_analog_tv int,
  rhp_mins_local bigint,
  rhp_mins_ld bigint,
  flg_tv_add_tmn int,
  tv_add_num_themepk int,
  avg_tv_dur_hrs_kids_fmly decimal(38, 2),
  avg_tv_dur_hrs_life_real decimal(38, 2),
  avg_tv_dur_hrs_movies decimal(38, 2),
  avg_tv_dur_hrs_multicul decimal(38, 2),
  avg_tv_dur_hrs_shop decimal(38, 2),
  avg_tv_dur_hrs_spirit decimal(38, 2),
  avg_tv_dur_hrs_sports decimal(38, 2),
  avg_tv_num_channel decimal(38, 2),
  avg_tv_num_genre decimal(38, 2),
  avg_tv_dur_hrs_200 decimal(38, 2),
  avg_tv_dur_hrs_600 decimal(38, 2),
  avg_tv_dur_hrs_1000 decimal(38, 2),
  avg_tv_dur_hrs_1630 decimal(38, 2),
  avg_tv_dur_hrs_1930 decimal(38, 2),
  avg_tv_dur_hrs_2300 decimal(38, 2),
  avg_tv_dur_hrs_cannetwork decimal(38, 2),
  avg_tv_dur_hrs_unknown decimal(38, 2),
  avg_tv_dur_hrs_weekday decimal(38, 2),
  avg_tv_dur_hrs_weekend decimal(38, 2),
  avg_tv_num_day_view decimal(38, 2),
  avg_tv_ttl_dur_hrs_mly decimal(38, 2),
  avg_rod_cnt_children decimal(38, 2),
  avg_rod_cnt_comedy decimal(38, 2),
  avg_rod_cnt_drama decimal(38, 2),
  avg_rod_cnt_family decimal(38, 2),
  internet_mly_usage_actual decimal(38, 2),
  internet_mly_usage_entitled decimal(38, 2),
  flg_int_10to19mbps int,
  flg_profile_chatr int ) 
PARTITIONED BY (
  calendar_month int,
  calendar_year int,
  process_date string ) ;
