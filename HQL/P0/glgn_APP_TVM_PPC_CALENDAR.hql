set hive.execution.engine=tez;
set hive.auto.convert.join=false;
drop table if exists ext_APP_TVM.PPC_CALENDAR;
CREATE table ext_APP_TVM.PPC_CALENDAR stored as orc
AS SELECT BAN,
    SUBSCRIBER_NO,
    LST_FRANCHISE_TP,
    LST_BILL_CYCLE,
    LST_ACCOUNT_TYPE,
    LST_ACCOUNT_SUB_TYPE,
    LST_SUB_MARKET_CD,
    LST_INIT_ACTIVATION_DATE,
    LST_SUB_STATUS,
    LST_SUB_STATUS_ACT,
    LST_SUB_STATUS_RSN,
    LST_DEACTIVATION_DATE,
    LST_PRV_BAN,
    LST_PRV_BAN_MOVE_DATE,
    LST_NEXT_BAN,
    LST_NEXT_BAN_MOVE_DATE,
    LST_PRV_CTN,
    LST_PRV_CTN_CHG_DATE,
    LST_NEXT_CTN,
    LST_NEXT_CTN_CHG_DATE,
    LST_PRICE_PLAN,
    LST_PP_EFFECTIVE_DATE,
    LST_PAYEE_IND,
    LST_COMMIT_START_DATE,
    LST_COMMIT_END_DATE,
    LST_COMMIT_ORIG_NO_MONTH,
    MSP_YEAR,
    MSP_MONTH,
    OPENING,
    ACTIVATION,
    CTN_CHANGE_IN,
    CTN_CHANGE_OUT,
    BAN_CHANGE_IN,
    BAN_CHANGE_OUT,
    RESUME_NON_CHURN,
    DEACT_NON_CHURN,
    RESUME_PPD,
    DEACT_PPD,
    RESUME_CHURN,
    DEACT_CHURN,
    PP_CHANGE_IN,
    PP_CHANGE_OUT,
    PP_IN_MONTH_IN,
    PP_IN_MONTH_OUT,
    PP_BACK_IN,
    PP_BACK_OUT,
    PP_MISC_ADJUST,
    MISC_PP_DIFF,
    PP_NET_CHANGE,
    NET_PP_BACKDATED,
    ACTIVATIONS,
    NET_NON_CHURN_DEACTS,
    GROSS_ADDS,
    NET_CHURN_DEACTS,
    NET_ADDS,
    ALT_ACTIVATIONS,
    ALT_GROSS_ADDS,
    ALT_NET_ADDS,
    NET_PREPAID_MIGRATION,
    NET_CTN_CHANGE,
    NET_BAN_CHANGE,
    PP_MISC_DIFF,
    CLOSING,
    MSID,
    INIT_ACTIVATION_DATE,
    DEACTIVATION_DATE,
    SUB_STATUS,
    SUB_STATUS_LAST_ACT,
    SUB_STATUS_RSN_CODE,
    SUB_STATUS_DATE,
    SUB_STATUS_ISSUE_DATE,
    DEALER_CODE,
    MSP_CAN_SUB_STATUS,
    MSP_CAN_LAST_ACT,
    MSP_CAN_CHURN_CODE,
    MSP_CAN_DEACT_REASON_CD,
    MSP_CAN_LAST_RSN_CODE,
    MSP_CAN_SUB_STATUS_RSN_CODE,
    MSP_CAN_DEACTIVATION_DATE,
    MSP_CAN_INIT_ACTIVATION_DATE,
    PORTED,
    OSP,
    NSP,
    PORTED_ALT,
    PRODUCT_TYPE,
    NPA,
    NXX,
    RPT_CNTR,
    CITY,
    REGION,
    RPT_REGION,
    PROVINCE,
    SUB_MARKET_CD,
    BILL_CYCLE,
    USG_CYCLE_START_DATE,
    USG_CYCLE_CLOSE_DATE,
    RC_CYCLE_START_DATE,
    RC_CYCLE_CLOSE_DATE,
    OPENING_PRICE_PLAN,
    CLOSING_PRICE_PLAN,
    OPENING_PPLAN_SERIES_TYPE,
    CLOSING_PPLAN_SERIES_TYPE,
    NAC,
    NAC_USG_BC,
    NAC_YEAR,
    NAC_MONTH,
    NAC_CHANNEL_ID,
    CAN,
    CAN_YEAR,
    CAN_MONTH,
    MSP_CAN,
    MSP_CAN_YEAR,
    MSP_CAN_MONTH,
    PPC,
    PPC_YEAR,
    PPC_MONTH,
    PPC_OPENING_EFF_DATE,
    PPC_OPENING_EXP_DATE,
    PPC_OPENING_REQUEST_DATE,
    PPC_CLOSING_EFF_DATE,
    PPC_CLOSING_EXP_DATE,
    PPC_CLOSING_REQUEST_DATE,
    PPC_CLOSING_CHANNEL_ID,
    PPC_REQUEST,
    PPC_REQUEST_YEAR,
    PPC_REQUEST_MONTH,
    SEG_SUB_GROUP,
    EMPLOYEES,
    COMPANY_CODE,
    CUSTGRP,
    CUSTTYPE,
    MSD,
    MSDTYPE,
    PAYEE_POST,
    PRICE_PLAN_TYPE_1,
    PRICE_PLAN_TYPE_2,
    PRICE_PLAN_TYPE_4,
    SHARE_EVERYTHING,
    SHARE_EVERYTHING_PLUS,
    SHARE_EVERYTHING_SUBSTITUTE,
    BIZ_SE_SUBSTITUTE,
    WHP,
    SE_VOICE_OPTION,
    LEGACY_SHARE,
    PP_SHARING_TYPE_DESC,
    NHL_ELIGIBILITY,
    RETENTION,
    PP_RATE,
    PP_SECONDARY_AMOUNT,
    PP_FEATURE_CODE,
    PPLAN_SERIES_CD,
    PPLAN_GROUP_CD,
    PPLAN_SERIES_DESC,
    PPLAN_GROUP_DESC,
    PPLAN_SERIES_TYPE,
    PPLAN_SERIES_TYPE_DESC,
    PP_MIN_SALE_EFF_DATE,
    PP_MIN_CREATION_DATE,
    PP_SALE_EXP_DATE,
    SOC_DESCRIPTION,
    PG_TYPE,
    SUBS_CATEGORY,
    SOC_REGION,
    SOC_REGION_LONG,
    SOC_REGION_SHORT,
    FROM_SOC_DESCRIPTION,
    FROM_PRICE_PLAN_TYPE_1,
    FROM_PRICE_PLAN_TYPE_2,
    FROM_PRICE_PLAN_TYPE_4,
    FROM_PP_RATE,
    FROM_PP_SECONDARY_AMOUNT,
    FROM_SUBS_CATEGORY,
    LST_NAC,
    LST_CAN,
    MSF,
    FROM_MSF,
    BAN_CNT_SUB_LINES,
    BAN_CNT_SE,
    BAN_CNT_SE_PLUS,
    BAN_CNT_SE_SUBSTITUTE,
    BAN_CNT_BIZ_SE_SUBSTITUTE,
    BAN_CNT_RETENTION,
    BAN_CNT_WHP,
    BAN_CNT_FS,
    BAN_CNT_NHL,
    BAN_CNT_NS,
    BAN_MIN_INIT_ACTIVATION_DATE,
    NEW_SUB_IN_BAN_BC,
    HUP,
    HUP_YEAR,
    HUP_MONTH,
    HUP_REQUEST,
    HUP_REQUEST_YEAR,
    HUP_REQUEST_MONTH,
    SEQUENCE_NO,
    EQSUB_SEQ_NO,
    IMEI,
    SKU,
    SUBSIDY_AMT,
    SUBSIDY_ACTIVITY,
    SUBSIDY_START_DATE,
    SUBSIDY_END_DATE,
    SUBSIDY_TERM,
    SUBSIDY_ISSUE_DATE,
    SUBSIDY_TYPE,
    ADDRESS_ID,
    NUM_OF_COMPONENTS,
    COUPON_AMT,
    COUPON_REDEEM_DATE,
    TOTAL_TERMED_MSF,
    TOTAL_NONTERMED_MSF,
    STATUS,
    HUP_TYPE,
    PROVINCE_AT_SBSDY,
    HUP_SEQ_NO,
    HUP_UPGRADE_TYPE,
    OLD_IMEI,
    NEW_IMEI,
    SWAP_REQ_IMEI_MODEL,
    OLD_EQ_TYPE,
    NEW_EQ_TYPE,
    ADMINISTRATION_CHG,
    HARDWARE_CHG,
    PRE_HUP_CHARGE,
    HUP_REQUEST_DATE,
    HUP_REQUEST_STATUS,
    HUP_TIER,
    OLD_COMMIT_NO_MONTH,
    OLD_COMMIT_START_DATE,
    OLD_COMMIT_END_DATE,
    NEW_COMMIT_NO_MONTH,
    NEW_COMMIT_START_DATE,
    NEW_COMMIT_END_DATE,
    FIDO_DLRS,
    REBATE_AMT,
    REBATE_AMT_2,
    REBATE_AMT_3,
    HUP_STATUS_DATE,
    PRE_HUP_TERM,
    ESN_SEQ_NO,
    SIM_ACTIVATION_IND,
    SUBSIDIZED_IND,
    SUBSIDIZED_ITEM_FEE,
    HUP_CHANNEL,
    COMMIT_START_DATE,
    COMMIT_END_DATE,
    COMMIT_ORIG_NO_MONTH,
    PLAN_RC,
    NON_PLAN_RC,
    DISCOUNT_RC,
    IDV_BAN_FLAG,
    IDV_SOC_FLAG,
    HAS_DATA_SOC_PRE,
    SUB_DATA_BUCKET_MB_PRE,
    HAS_DATA_SOC_POST,
    SUB_DATA_BUCKET_MB_POST,
    HAS_DATA_SOC_IN_BAN_PRE,
    BAN_DATA_BUCKET_MB_PRE,
    HAS_DATA_SOC_IN_BAN_POST,
    BAN_DATA_BUCKET_MB_POST,
    MRC_POST,
    TERM_WINDOW,
    PAYEE_PRE,
    PLAN_RC_PRE,
    NON_PLAN_RC_PRE,
    DISCOUNT_RC_PRE,
    MRC_PRE,
    OPENING_SEGMENT_ID,
    OPENING_SEGMENT_DESC,
    CLOSING_SEGMENT_ID,
    CLOSING_SEGMENT_DESC,
    SEG_IN,
    SEG_OUT,
    SEG_NET,
    BAN_SEG_IN,
    BAN_SEG_OUT,
    BAN_SEG_NET,
    LST_SEGMENT_DESC,
    LST_ECID,
    UNL_LOC_ANY_INC_OUT,
    UNL_LOC_ANY_INC,
    UNL_LOC_ANY_OUT,
    UNL_LOC_EW_INC_OUT,
    UNL_LOC_EW_INC,
    UNL_LOC_EW_OUT,
    BUNDLE_LOC_WD_INC_OUT,
    BUNDLE_LOC_WD_INC,
    BUNDLE_LOC_WD_OUT,
    BUNDLE_LOC_EW_INC_OUT,
    BUNDLE_LOC_EW_INC,
    BUNDLE_LOC_EW_OUT,
    UNL_CALL_CRICLE_LOC,
    BUNDLE_LOC_ANY_INC_OUT,
    BUNDLE_LOC_ANY_INC,
    BUNDLE_LOC_ANY_OUT,
    BUNDLE_LOC_INC_OUT,
    BUNDLE_LOC_INC,
    BUNDLE_LOC_OUT,
    VOICE_BUCKET_DESCRIPTION,
    BUNDLE_CALL_CRICLE_LOC,
    VOICE_BUNDLE,
    VOICE_BUCKET,
    PPC_AND_HUP
  FROM
    (SELECT A.BAN,
      A.SUBSCRIBER_NO,
      A.LST_FRANCHISE_TP,
      A.LST_BILL_CYCLE,
      A.LST_ACCOUNT_TYPE,
      A.LST_ACCOUNT_SUB_TYPE,
      A.LST_SUB_MARKET_CD,
      A.LST_INIT_ACTIVATION_DATE,
      A.LST_SUB_STATUS,
      A.LST_SUB_STATUS_ACT,
      A.LST_SUB_STATUS_RSN,
      A.LST_DEACTIVATION_DATE,
      A.LST_PRV_BAN,
      A.LST_PRV_BAN_MOVE_DATE,
      A.LST_NEXT_BAN,
      A.LST_NEXT_BAN_MOVE_DATE,
      A.LST_PRV_CTN,
      A.LST_PRV_CTN_CHG_DATE,
      A.LST_NEXT_CTN,
      A.LST_NEXT_CTN_CHG_DATE,
      A.LST_PRICE_PLAN,
      A.LST_PP_EFFECTIVE_DATE,
      A.LST_PAYEE_IND,
      A.LST_COMMIT_START_DATE,
      A.LST_COMMIT_END_DATE,
      A.LST_COMMIT_ORIG_NO_MONTH,
      A.MSP_YEAR,
      A.MSP_MONTH,
      A.OPENING,
      A.ACTIVATION,
      A.CTN_CHANGE_IN,
      A.CTN_CHANGE_OUT,
      A.BAN_CHANGE_IN,
      A.BAN_CHANGE_OUT,
      A.RESUME_NON_CHURN,
      A.DEACT_NON_CHURN,
      A.RESUME_PPD,
      A.DEACT_PPD,
      A.RESUME_CHURN,
      A.DEACT_CHURN,
      A.PP_CHANGE_IN,
      A.PP_CHANGE_OUT,
      A.PP_IN_MONTH_IN,
      A.PP_IN_MONTH_OUT,
      A.PP_BACK_IN,
      A.PP_BACK_OUT,
      A.PP_MISC_ADJUST,
      A.MISC_PP_DIFF,
      A.PP_NET_CHANGE,
      A.NET_PP_BACKDATED,
      A.ACTIVATIONS,
      A.NET_NON_CHURN_DEACTS,
      A.GROSS_ADDS,
      A.NET_CHURN_DEACTS,
      A.NET_ADDS,
      A.ALT_ACTIVATIONS,
      A.ALT_GROSS_ADDS,
      A.ALT_NET_ADDS,
      A.NET_PREPAID_MIGRATION,
      A.NET_CTN_CHANGE,
      A.NET_BAN_CHANGE,
      A.PP_MISC_DIFF,
      A.CLOSING,
      A.MSID,
      A.INIT_ACTIVATION_DATE,
      A.DEACTIVATION_DATE,
      A.SUB_STATUS,
      A.SUB_STATUS_LAST_ACT,
      A.SUB_STATUS_RSN_CODE,
      A.SUB_STATUS_DATE,
      A.SUB_STATUS_ISSUE_DATE,
      A.DEALER_CODE,
      A.MSP_CAN_SUB_STATUS,
      A.MSP_CAN_LAST_ACT,
      A.MSP_CAN_CHURN_CODE,
      A.MSP_CAN_DEACT_REASON_CD,
      A.MSP_CAN_LAST_RSN_CODE,
      A.MSP_CAN_SUB_STATUS_RSN_CODE,
      A.MSP_CAN_DEACTIVATION_DATE,
      A.MSP_CAN_INIT_ACTIVATION_DATE,
      A.PORTED,
      A.OSP,
      A.NSP,
      A.PORTED_ALT,
      A.PRODUCT_TYPE,
      A.NPA,
      A.NXX,
      A.RPT_CNTR,
      A.CITY,
      A.REGION,
      A.RPT_REGION,
      A.PROVINCE,
      A.SUB_MARKET_CD,
      A.BILL_CYCLE,
      A.USG_CYCLE_START_DATE,
      A.USG_CYCLE_CLOSE_DATE,
      A.RC_CYCLE_START_DATE,
      A.RC_CYCLE_CLOSE_DATE,
      A.OPENING_PRICE_PLAN,
      A.CLOSING_PRICE_PLAN,
      A.OPENING_PPLAN_SERIES_TYPE,
      A.CLOSING_PPLAN_SERIES_TYPE,
      A.NAC,
      A.NAC_USG_BC,
      A.NAC_YEAR,
      A.NAC_MONTH,
      A.NAC_CHANNEL_ID,
      A.CAN,
      A.CAN_YEAR,
      A.CAN_MONTH,
      A.MSP_CAN,
      A.MSP_CAN_YEAR,
      A.MSP_CAN_MONTH,
      A.PPC,
      A.PPC_YEAR,
      A.PPC_MONTH,
      A.PPC_OPENING_EFF_DATE,
      A.PPC_OPENING_EXP_DATE,
      A.PPC_OPENING_REQUEST_DATE,
      A.PPC_CLOSING_EFF_DATE,
      A.PPC_CLOSING_EXP_DATE,
      A.PPC_CLOSING_REQUEST_DATE,
      A.PPC_CLOSING_CHANNEL_ID,
      A.PPC_REQUEST,
      A.PPC_REQUEST_YEAR,
      A.PPC_REQUEST_MONTH,
      A.SEG_SUB_GROUP,
      A.EMPLOYEES,
      A.COMPANY_CODE,
      A.CUSTGRP,
      A.CUSTTYPE,
      A.MSD,
      A.MSDTYPE,
      A.PAYEE_POST,
      A.PRICE_PLAN_TYPE_1,
      A.PRICE_PLAN_TYPE_2,
      A.PRICE_PLAN_TYPE_4,
      A.SHARE_EVERYTHING,
      A.SHARE_EVERYTHING_PLUS,
      A.SHARE_EVERYTHING_SUBSTITUTE,
      A.BIZ_SE_SUBSTITUTE,
      A.WHP,
      A.SE_VOICE_OPTION,
      A.LEGACY_SHARE,
      A.PP_SHARING_TYPE_DESC,
      A.NHL_ELIGIBILITY,
      A.RETENTION,
      A.PP_RATE,
      A.PP_SECONDARY_AMOUNT,
      A.PP_FEATURE_CODE,
      A.PPLAN_SERIES_CD,
      A.PPLAN_GROUP_CD,
      A.PPLAN_SERIES_DESC,
      A.PPLAN_GROUP_DESC,
      A.PPLAN_SERIES_TYPE,
      A.PPLAN_SERIES_TYPE_DESC,
      A.PP_MIN_SALE_EFF_DATE,
      A.PP_MIN_CREATION_DATE,
      A.PP_SALE_EXP_DATE,
      A.SOC_DESCRIPTION,
      A.PG_TYPE,
      A.SUBS_CATEGORY,
      A.SOC_REGION,
      A.SOC_REGION_LONG,
      A.SOC_REGION_SHORT,
      A.FROM_SOC_DESCRIPTION,
      A.FROM_PRICE_PLAN_TYPE_1,
      A.FROM_PRICE_PLAN_TYPE_2,
      A.FROM_PRICE_PLAN_TYPE_4,
      A.FROM_PP_RATE,
      A.FROM_PP_SECONDARY_AMOUNT,
      A.FROM_SUBS_CATEGORY,
      A.LST_NAC,
      A.LST_CAN,
      A.MSF,
      A.FROM_MSF,
      A.BAN_CNT_SUB_LINES,
      A.BAN_CNT_SE,
      A.BAN_CNT_SE_PLUS,
      A.BAN_CNT_SE_SUBSTITUTE,
      A.BAN_CNT_BIZ_SE_SUBSTITUTE,
      A.BAN_CNT_RETENTION,
      A.BAN_CNT_WHP,
      A.BAN_CNT_FS,
      A.BAN_CNT_NHL,
      A.BAN_CNT_NS,
      A.BAN_MIN_INIT_ACTIVATION_DATE,
      A.NEW_SUB_IN_BAN_BC,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP
        ELSE B.HUP
      END AS HUP,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_YEAR
        ELSE B.HUP_YEAR
      END AS HUP_YEAR,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_MONTH
        ELSE B.HUP_MONTH
      END AS HUP_MONTH,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_REQUEST
        ELSE B.HUP_REQUEST
      END AS HUP_REQUEST,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_REQUEST_YEAR
        ELSE B.HUP_REQUEST_YEAR
      END AS HUP_REQUEST_YEAR,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_REQUEST_MONTH
        ELSE B.HUP_REQUEST_MONTH
      END AS HUP_REQUEST_MONTH,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SEQUENCE_NO
        ELSE B.SEQUENCE_NO
      END AS SEQUENCE_NO,
      CASE
        WHEN B.BAN IS NULL
        THEN A.EQSUB_SEQ_NO
        ELSE B.EQSUB_SEQ_NO
      END AS EQSUB_SEQ_NO,
      CASE
        WHEN B.BAN IS NULL
        THEN A.IMEI
        ELSE B.IMEI
      END AS IMEI,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SKU
        ELSE B.SKU
      END AS SKU,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_AMT
        ELSE B.SUBSIDY_AMT
      END AS SUBSIDY_AMT,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_ACTIVITY
        ELSE B.SUBSIDY_ACTIVITY
      END AS SUBSIDY_ACTIVITY,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_START_DATE
        ELSE B.SUBSIDY_START_DATE
      END AS SUBSIDY_START_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_END_DATE
        ELSE B.SUBSIDY_END_DATE
      END AS SUBSIDY_END_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_TERM
        ELSE B.SUBSIDY_TERM
      END AS SUBSIDY_TERM,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_ISSUE_DATE
        ELSE B.SUBSIDY_ISSUE_DATE
      END AS SUBSIDY_ISSUE_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDY_TYPE
        ELSE B.SUBSIDY_TYPE
      END AS SUBSIDY_TYPE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.ADDRESS_ID
        ELSE B.ADDRESS_ID
      END AS ADDRESS_ID,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NUM_OF_COMPONENTS
        ELSE B.NUM_OF_COMPONENTS
      END AS NUM_OF_COMPONENTS,
      CASE
        WHEN B.BAN IS NULL
        THEN A.COUPON_AMT
        ELSE B.COUPON_AMT
      END AS COUPON_AMT,
      CASE
        WHEN B.BAN IS NULL
        THEN A.COUPON_REDEEM_DATE
        ELSE B.COUPON_REDEEM_DATE
      END AS COUPON_REDEEM_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.TOTAL_TERMED_MSF
        ELSE B.TOTAL_TERMED_MSF
      END AS TOTAL_TERMED_MSF,
      CASE
        WHEN B.BAN IS NULL
        THEN A.TOTAL_NONTERMED_MSF
        ELSE B.TOTAL_NONTERMED_MSF
      END AS TOTAL_NONTERMED_MSF,
      CASE
        WHEN B.BAN IS NULL
        THEN A.STATUS
        ELSE B.STATUS
      END AS STATUS,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_TYPE
        ELSE B.HUP_TYPE
      END AS HUP_TYPE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.PROVINCE_AT_SBSDY
        ELSE B.PROVINCE_AT_SBSDY
      END AS PROVINCE_AT_SBSDY,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_SEQ_NO
        ELSE B.HUP_SEQ_NO
      END AS HUP_SEQ_NO,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_UPGRADE_TYPE
        ELSE B.HUP_UPGRADE_TYPE
      END AS HUP_UPGRADE_TYPE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.OLD_IMEI
        ELSE B.OLD_IMEI
      END AS OLD_IMEI,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NEW_IMEI
        ELSE B.NEW_IMEI
      END AS NEW_IMEI,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SWAP_REQ_IMEI_MODEL
        ELSE B.SWAP_REQ_IMEI_MODEL
      END AS SWAP_REQ_IMEI_MODEL,
      CASE
        WHEN B.BAN IS NULL
        THEN A.OLD_EQ_TYPE
        ELSE B.OLD_EQ_TYPE
      END AS OLD_EQ_TYPE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NEW_EQ_TYPE
        ELSE B.NEW_EQ_TYPE
      END AS NEW_EQ_TYPE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.ADMINISTRATION_CHG
        ELSE B.ADMINISTRATION_CHG
      END AS ADMINISTRATION_CHG,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HARDWARE_CHG
        ELSE B.HARDWARE_CHG
      END AS HARDWARE_CHG,
      CASE
        WHEN B.BAN IS NULL
        THEN A.PRE_HUP_CHARGE
        ELSE B.PRE_HUP_CHARGE
      END AS PRE_HUP_CHARGE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_REQUEST_DATE
        ELSE B.HUP_REQUEST_DATE
      END AS HUP_REQUEST_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_REQUEST_STATUS
        ELSE B.HUP_REQUEST_STATUS
      END AS HUP_REQUEST_STATUS,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_TIER
        ELSE B.HUP_TIER
      END AS HUP_TIER,
      CASE
        WHEN B.BAN IS NULL
        THEN A.OLD_COMMIT_NO_MONTH
        ELSE B.OLD_COMMIT_NO_MONTH
      END AS OLD_COMMIT_NO_MONTH,
      CASE
        WHEN B.BAN IS NULL
        THEN A.OLD_COMMIT_START_DATE
        ELSE B.OLD_COMMIT_START_DATE
      END AS OLD_COMMIT_START_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.OLD_COMMIT_END_DATE
        ELSE B.OLD_COMMIT_END_DATE
      END AS OLD_COMMIT_END_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NEW_COMMIT_NO_MONTH
        ELSE B.NEW_COMMIT_NO_MONTH
      END AS NEW_COMMIT_NO_MONTH,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NEW_COMMIT_START_DATE
        ELSE B.NEW_COMMIT_START_DATE
      END AS NEW_COMMIT_START_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.NEW_COMMIT_END_DATE
        ELSE B.NEW_COMMIT_END_DATE
      END AS NEW_COMMIT_END_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.FIDO_DLRS
        ELSE B.FIDO_DLRS
      END AS FIDO_DLRS,
      CASE
        WHEN B.BAN IS NULL
        THEN A.REBATE_AMT
        ELSE B.REBATE_AMT
      END AS REBATE_AMT,
      CASE
        WHEN B.BAN IS NULL
        THEN A.REBATE_AMT_2
        ELSE B.REBATE_AMT_2
      END AS REBATE_AMT_2,
      CASE
        WHEN B.BAN IS NULL
        THEN A.REBATE_AMT_3
        ELSE B.REBATE_AMT_3
      END AS REBATE_AMT_3,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_STATUS_DATE
        ELSE B.HUP_STATUS_DATE
      END AS HUP_STATUS_DATE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.PRE_HUP_TERM
        ELSE B.PRE_HUP_TERM
      END AS PRE_HUP_TERM,
      CASE
        WHEN B.BAN IS NULL
        THEN A.ESN_SEQ_NO
        ELSE B.ESN_SEQ_NO
      END AS ESN_SEQ_NO,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SIM_ACTIVATION_IND
        ELSE B.SIM_ACTIVATION_IND
      END AS SIM_ACTIVATION_IND,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDIZED_IND
        ELSE B.SUBSIDIZED_IND
      END AS SUBSIDIZED_IND,
      CASE
        WHEN B.BAN IS NULL
        THEN A.SUBSIDIZED_ITEM_FEE
        ELSE B.SUBSIDIZED_ITEM_FEE
      END AS SUBSIDIZED_ITEM_FEE,
      CASE
        WHEN B.BAN IS NULL
        THEN A.HUP_CHANNEL
        ELSE B.HUP_CHANNEL
      END AS HUP_CHANNEL,
      A.COMMIT_START_DATE,
      A.COMMIT_END_DATE,
      A.COMMIT_ORIG_NO_MONTH,
      A.PLAN_RC,
      A.NON_PLAN_RC,
      A.DISCOUNT_RC,
      A.IDV_BAN_FLAG,
      A.IDV_SOC_FLAG,
      A.HAS_DATA_SOC_PRE,
      A.SUB_DATA_BUCKET_MB_PRE,
      A.HAS_DATA_SOC_POST,
      A.SUB_DATA_BUCKET_MB_POST,
      A.HAS_DATA_SOC_IN_BAN_PRE,
      A.BAN_DATA_BUCKET_MB_PRE,
      A.HAS_DATA_SOC_IN_BAN_POST,
      A.BAN_DATA_BUCKET_MB_POST,
      A.MRC_POST,
      A.TERM_WINDOW,
      A.PAYEE_PRE,
      A.PLAN_RC_PRE,
      A.NON_PLAN_RC_PRE,
      A.DISCOUNT_RC_PRE,
      A.MRC_PRE,
      A.OPENING_SEGMENT_ID,
      A.OPENING_SEGMENT_DESC,
      A.CLOSING_SEGMENT_ID,
      A.CLOSING_SEGMENT_DESC,
      A.SEG_IN,
      A.SEG_OUT,
      A.SEG_NET,
      A.BAN_SEG_IN,
      A.BAN_SEG_OUT,
      A.BAN_SEG_NET,
      A.LST_SEGMENT_DESC,
      A.LST_ECID,
      A.UNL_LOC_ANY_INC_OUT,
      A.UNL_LOC_ANY_INC,
      A.UNL_LOC_ANY_OUT,
      A.UNL_LOC_EW_INC_OUT,
      A.UNL_LOC_EW_INC,
      A.UNL_LOC_EW_OUT,
      A.BUNDLE_LOC_WD_INC_OUT,
      A.BUNDLE_LOC_WD_INC,
      A.BUNDLE_LOC_WD_OUT,
      A.BUNDLE_LOC_EW_INC_OUT,
      A.BUNDLE_LOC_EW_INC,
      A.BUNDLE_LOC_EW_OUT,
      A.UNL_CALL_CRICLE_LOC,
      A.BUNDLE_LOC_ANY_INC_OUT,
      A.BUNDLE_LOC_ANY_INC,
      A.BUNDLE_LOC_ANY_OUT,
      A.BUNDLE_LOC_INC_OUT,
      A.BUNDLE_LOC_INC,
      A.BUNDLE_LOC_OUT,
      A.VOICE_BUCKET_DESCRIPTION,
      A.BUNDLE_CALL_CRICLE_LOC,
      A.VOICE_BUNDLE,
      A.VOICE_BUCKET,
      ROW_NUMBER () OVER (PARTITION BY A.BAN,A.SUBSCRIBER_NO,A.PPC_YEAR,A.PPC_MONTH ORDER BY A.MSP_YEAR DESC, A.MSP_MONTH DESC,B.MSP_YEAR DESC, B.MSP_MONTH DESC) SEQ ,
      CASE
        WHEN B.BAN IS NOT NULL
        THEN 1
        ELSE 0
      END AS PPC_AND_HUP
FROM (select * from app_tvm.ppc
WHERE CONCAT(MSP_YEAR,'-',LPAD(MSP_MONTH,2,'0'),'-','01') BETWEEN add_months(CONCAT(PPC_YEAR,'-',LPAD(PPC_MONTH,2,'0'),'-','01'),-1) AND add_months(CONCAT(PPC_YEAR,'-',LPAD(PPC_MONTH,2,'0'),'-','01'),+1) and PPC_CLOSING_EFF_DATE < date_add(last_day(current_date),1) 
) A
LEFT JOIN (SELECT * FROM app_tvm.HUP 
WHERE CONCAT(MSP_YEAR,'-',LPAD(MSP_MONTH,2,'0'),'-','01') BETWEEN add_months(CONCAT(HUP_YEAR,'-',LPAD(HUP_MONTH,2,'0'),'-','01'),-1) AND add_months(CONCAT(HUP_YEAR,'-',LPAD(HUP_MONTH,2,'0'),'-','01'),+1) and HUP_STATUS_DATE < date_add(last_day(current_date),1) ) B
ON A.BAN  = B.BAN AND A.SUBSCRIBER_NO = B.SUBSCRIBER_NO AND A.PPC_YEAR  = B.HUP_YEAR AND A.PPC_MONTH = B.HUP_MONTH ) y where seq=1 ;
drop table if exists app_tvm.PPC_CALENDAR;
alter table ext_app_tvm.PPC_CALENDAR rename to app_tvm.PPC_CALENDAR;
