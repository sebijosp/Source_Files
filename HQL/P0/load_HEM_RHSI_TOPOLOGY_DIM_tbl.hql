!echo ;
!echo INFO Hive : Dropping HEM.RHSI_TOPOLOGY_DIM_TEMP;
DROP TABLE IF EXISTS HEM.RHSI_TOPOLOGY_DIM_TEMP;

!echo ;
!echo INFO Hive : Creating HEM.RHSI_TOPOLOGY_DIM_TEMP FROM HEM.RHSI_TOPOLOGY_DIM;
CREATE TABLE HEM.RHSI_TOPOLOGY_DIM_TEMP AS
SELECT * FROM HEM.RHSI_TOPOLOGY_DIM;

!echo ;
!echo INFO Hive : Dropping HEM.RHSI_TOPOLOGY_STG2
DROP TABLE IF EXISTS HEM.RHSI_TOPOLOGY_STG2;

!echo ;
!echo INFO Hive : Creating HEM.RHSI_TOPOLOGY_STG2;
CREATE TABLE IF NOT EXISTS HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    CBU STRING COMMENT 'From reference table CBU_PHUB_REF',
    PHUB STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    CMTS STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    RTN_SEG STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    FWD_SEG STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    MAC_DOMAIN STRING COMMENT 'From NRM source HEM.NRM_RHSI_TOPOLOGY',
    MAC_ADDR STRING COMMENT 'Mac address of modems from SS and Maestro tables based on sam_key',
    --ETL CONTROL COLUMNS BELOW
    CHANGE_TYPE STRING COMMENT 'I U X Flag for scd processiog',
    MD5_HASH STRING COMMENT 'HASH Values for SCD procession',
    CRNT_FLG STRING COMMENT 'Control values N/Y to indicate if latest record in chain of history',
    SRC_EFFECTIVE_DATE TIMESTAMP COMMENT 'Start date of record in system',
    SRC_END_DATE       TIMESTAMP COMMENT 'End date of record in system',
    HDP_INSERT_TS      TIMESTAMP COMMENT 'Timestamp when the record was inserted into Hive',
    HDP_UPDATE_TS      TIMESTAMP COMMENT 'Timestamp when the record was updated in Hive',
    JOB_EXECUTION_ID STRING COMMENT 'Job Execution ID maps to execution ID of loadcontrol'
  )
  STORED AS ORC;

!echo ;
!echo INFO Hive : Truncating HEM.RHSI_TOPOLOGY_STG1;
TRUNCATE TABLE HEM.RHSI_TOPOLOGY_STG1;

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG1;
INSERT
INTO TABLE HEM.RHSI_TOPOLOGY_STG1
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    MD5_HASH,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
SELECT TOPO.SAM_KEY,
  REFE.CBU,
  REFE.PHUB,
  TOPO.CMTS,
  TOPO.RTN_SEG,
  TOPO.FWD_SEG,
  lower(IBR.MAC_ADDR),
  TOPO.MAC_DOMAIN,
  md5(concat(TOPO.SAM_KEY,TOPO.CMTS,REFE.PHUB,TOPO.RTN_SEG,TOPO.FWD_SEG,lower(IBR.MAC_ADDR))),
  from_unixtime(unix_timestamp()),
  from_unixtime(unix_timestamp()),
  TOPO.JOB_EXECUTION_ID
FROM
  (SELECT SAM_KEY,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_DOMAIN,
    --MD5_HASH,
    JOB_EXECUTION_ID,
    ROWNUMBER
  FROM
    (SELECT SAM_KEY,
      PHUB,
      CMTS,
      RTN_SEG,
      FWD_SEG,
      MAC_DOMAIN,
      --MD5_HASH,
      --HDP_INSERT_TS,
      JOB_EXECUTION_ID,
      row_number() over(partition BY SAM_KEY,PHUB, CMTS,RTN_SEG,FWD_SEG order by SAM_KEY,PHUB, CMTS,RTN_SEG,FWD_SEG,MAC_DOMAIN DESC) ROWNUMBER
    FROM HEM.NRM_RHSI_TOPOLOGY
    WHERE HDP_INSERT_TS >= '${hiveconf:FromDate}'
    AND HDP_FILE_NAME   IN
      (SELECT HDP_FILE_NAME
      FROM HEM.NRM_RHSI_TOPOLOGY
      ORDER BY HDP_FILE_NAME DESC limit 1
      )
    )X
  WHERE ROWNUMBER=1
  ) TOPO
LEFT OUTER JOIN HEM.CBU_PHUB_REF REFE
ON TOPO.PHUB=REFE.PHUB
LEFT OUTER JOIN
  (
  SELECT DISTINCT NRMPROD.SAM_KEY,
lower(SUBDIM.CM_MAC_ADDR) as MAC_ADDR
FROM
  (SELECT DISTINCT CUSTOMER_ID,
    CUSTOMER_ACCOUNT,
    CUSTOMER_LOCATION_ID
  FROM APP_IBRO.IBRO_SUBSCRIBER_ACTIVITY_CLOSE
  ) IBRO
INNER JOIN HEM.SUBSCRIBER_MODEM_DIM_MVW SUBDIM
ON IBRO.CUSTOMER_ACCOUNT = SUBDIM.ACCOUNT_NUMBER
INNER JOIN
  (SELECT DISTINCT SAM_KEY FROM HEM.NRM_RHSI_TOPOLOGY
  ) NRMPROD
ON IBRO.CUSTOMER_LOCATION_ID = NRMPROD.SAM_KEY
  ) IBR ON TOPO.SAM_KEY   =IBR.SAM_KEY
WHERE IBR.MAC_ADDR       IS NOT NULL
OR IBR.MAC_ADDR          <> '';

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - Records WITH No change;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
---unchanged Y records. added where Y condition else N records is retrieved also.
SELECT hist.SAM_KEY,
  hist.CBU,
  hist.PHUB,
  hist.CMTS,
  hist.RTN_SEG,
  hist.FWD_SEG,
  hist.MAC_ADDR,
  hist.MAC_DOMAIN,
  'X',
  hist.MD5_HASH,
  hist.CRNT_FLG,
  hist.SRC_EFFECTIVE_DATE,
  hist.SRC_END_DATE,
  hist.HDP_INSERT_TS,
  hist.HDP_UPDATE_TS,
  hist.JOB_EXECUTION_ID
FROM HEM.RHSI_TOPOLOGY_DIM_TEMP hist
INNER JOIN HEM.RHSI_TOPOLOGY_STG1 stg
ON hist.md5_hash = stg.md5_hash
AND hist.crnt_flg='Y';

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - NEW Records;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
--new records
SELECT stg1.sam_key,
  stg1.CBU,
  stg1.PHUB,
  stg1.CMTS,
  stg1.RTN_SEG,
  stg1.FWD_SEG,
  stg1.MAC_ADDR,
  stg1.MAC_DOMAIN,
  'I',
  stg1.MD5_HASH,
  'Y',
  CURRENT_TIMESTAMP(),
  NULL,
  CURRENT_TIMESTAMP(),
  CURRENT_TIMESTAMP(),
  stg1.JOB_EXECUTION_ID
FROM HEM.RHSI_TOPOLOGY_STG1 stg1
LEFT JOIN
  (SELECT * FROM HEM.RHSI_TOPOLOGY_DIM_TEMP WHERE crnt_flg = 'Y'
  ) hist
ON hist.md5_hash       = stg1.md5_hash
WHERE hist.md5_hash   IS NULL
AND stg1.mac_addr NOT IN
  (SELECT DISTINCT mac_addr
  FROM HEM.RHSI_TOPOLOGY_DIM_TEMP
  WHERE crnt_flg = 'Y'
  );

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - UPDATE Records;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
--update records
SELECT stg1.sam_key,
  stg1.CBU,
  stg1.PHUB,
  stg1.CMTS,
  stg1.RTN_SEG,
  stg1.FWD_SEG,
  stg1.MAC_ADDR,
  stg1.MAC_DOMAIN,
  'U',
  stg1.MD5_HASH,
  'Y',
  CURRENT_TIMESTAMP(),
  NULL,
  CURRENT_TIMESTAMP(),
  CURRENT_TIMESTAMP(),
  stg1.JOB_EXECUTION_ID
FROM HEM.RHSI_TOPOLOGY_STG1 stg1
LEFT JOIN
  (SELECT * FROM HEM.RHSI_TOPOLOGY_DIM_TEMP WHERE crnt_flg = 'Y'
  ) hist
ON hist.md5_hash     = stg1.md5_hash
WHERE hist.md5_hash IS NULL
AND stg1.mac_addr   IN
  (SELECT DISTINCT mac_addr
  FROM HEM.RHSI_TOPOLOGY_DIM_TEMP
  WHERE crnt_flg = 'Y'
  );

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - Expire Updated Records;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
---hist.*, mark records old
SELECT hist.SAM_KEY,
  hist.CBU,
  hist.PHUB,
  hist.CMTS,
  hist.RTN_SEG,
  hist.FWD_SEG,
  hist.MAC_ADDR,
  hist.MAC_DOMAIN,
  'U',
  hist.MD5_HASH,
  'N',
  hist.SRC_EFFECTIVE_DATE,
  CURRENT_TIMESTAMP(),
  hist.HDP_INSERT_TS,
  CURRENT_TIMESTAMP(),
  hist.JOB_EXECUTION_ID
FROM
  (SELECT * FROM HEM.RHSI_TOPOLOGY_DIM_TEMP WHERE crnt_flg = 'Y'
  ) hist
LEFT JOIN HEM.RHSI_TOPOLOGY_STG1 stg
ON hist.md5_hash    = stg.md5_hash
WHERE stg.md5_hash IS NULL
AND hist.mac_addr  IN
  (SELECT DISTINCT mac_addr FROM HEM.RHSI_TOPOLOGY_STG1
  );

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - Already inactive records;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
---already inactive records
SELECT hist.SAM_KEY,
  hist.CBU,
  hist.PHUB,
  hist.CMTS,
  hist.RTN_SEG,
  hist.FWD_SEG,
  hist.MAC_ADDR,
  hist.MAC_DOMAIN,
  'X',
  hist.MD5_HASH,
  hist.CRNT_FLG,
  hist.SRC_EFFECTIVE_DATE,
  hist.SRC_END_DATE,
  hist.HDP_INSERT_TS,
  hist.HDP_UPDATE_TS,
  hist.JOB_EXECUTION_ID
FROM HEM.RHSI_TOPOLOGY_DIM_TEMP hist
WHERE hist.crnt_flg = 'N';

!echo ;
!echo INFO Hive : Inserting INTO HEM.RHSI_TOPOLOGY_STG2 - Records WITH no MATCH IN Source;
INSERT
INTO HEM.RHSI_TOPOLOGY_STG2
  (
    SAM_KEY,
    CBU,
    PHUB,
    CMTS,
    RTN_SEG,
    FWD_SEG,
    MAC_ADDR,
    MAC_DOMAIN,
    CHANGE_TYPE,
    MD5_HASH,
    CRNT_FLG,
    SRC_EFFECTIVE_DATE,
    SRC_END_DATE,
    HDP_INSERT_TS,
    HDP_UPDATE_TS,
    JOB_EXECUTION_ID
  )
-- No Match means Record is there in Target But not in Source
SELECT hist.SAM_KEY,
  hist.CBU,
  hist.PHUB,
  hist.CMTS,
  hist.RTN_SEG,
  hist.FWD_SEG,
  hist.MAC_ADDR,
  hist.MAC_DOMAIN,
  'X',
  hist.MD5_HASH,
  hist.CRNT_FLG,
  hist.SRC_EFFECTIVE_DATE,
  hist.SRC_END_DATE,
  hist.HDP_INSERT_TS,
  hist.HDP_UPDATE_TS,
  hist.JOB_EXECUTION_ID
FROM
  (SELECT * FROM HEM.RHSI_TOPOLOGY_DIM_TEMP WHERE crnt_flg = 'Y'
  ) hist
LEFT JOIN HEM.RHSI_TOPOLOGY_STG1 stg
ON hist.md5_hash       = stg.md5_hash
WHERE stg.md5_hash    IS NULL
AND hist.mac_addr NOT IN
  (SELECT DISTINCT mac_addr FROM HEM.RHSI_TOPOLOGY_STG1
  );

!echo ;
!echo INFO Hive : Dropping HEM.RHSI_TOPOLOGY_DIM;
DROP TABLE IF EXISTS HEM.RHSI_TOPOLOGY_DIM;

!echo ;
!echo INFO Hive : Renaming TO HEM.RHSI_TOPOLOGY_STG2 FROM HEM.RHSI_TOPOLOGY_DIM;
ALTER TABLE HEM.RHSI_TOPOLOGY_STG2 RENAME TO HEM.RHSI_TOPOLOGY_DIM;

!echo ;
!echo Hive : Renamed HEM.RHSI_TOPOLOGY_STG2 TO HEM.RHSI_TOPOLOGY_DIM;
