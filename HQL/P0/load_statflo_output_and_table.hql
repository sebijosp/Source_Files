set hive.tez.container.size=8192;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_STORE_VISIT
SELECT BAN,BRSC_ID,TRANS_DATE,ROW_NUM
FROM
  (SELECT BAN,
    BRSC_ID,
    TRANS_DATE,
    ROW_NUMBER() OVER(PARTITION BY BAN ORDER BY TRANS_DATE DESC) AS ROW_NUM
  FROM
    (SELECT BAN,
      BRSC_ID,
      TRANS_DATE
    FROM DATA_PODS.POD_RETAILSSP_CTN_DLY
    WHERE BRSC_ID  IS NOT NULL
    AND TRANS_DATE >= ADD_MONTHS(CURRENT_DATE,-24)
    UNION ALL
    SELECT HASH.ACCOUNT      AS BAN,
      CJA.RETAIL_LOCATION_ID AS BRSC_ID,
      CJA.TRANS_DT           AS TRANS_DATE
    FROM
      (SELECT BAN,
        TRANS_DT,
        RETAIL_LOCATION_ID
      FROM APP_CUSTOMER_JOURNEY.CBU_CUST_JOURNEY_RETAIL_FCT
      WHERE FRANCHISE        IN ('R','F')
      AND RETAIL_LOCATION_ID IS NOT NULL
      AND TO_DATE(CONCAT(YEAR,'-',MONTH,'-',DAY)) BETWEEN ADD_MONTHS(CURRENT_DATE,-24) AND '${hiveconf:TRANS_DATE}'
      ) CJA
    JOIN HASH_LOOKUP.ECID_BAN_CAN HASH
    ON CJA.BAN = HASH.HASH_ACCOUNT
    ) QRY_INNER
  ) QRY_OUTER
WHERE ROW_NUM = 1;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_OUTPUT_AND
SELECT DISTANCE.STORE_ID,
  DISTANCE.CHAIN_CODE,
  DISTANCE.LOCATION_ID,
  DISTANCE.BANNER,
  DISTANCE.LOCATION_NAME,
  DISTANCE.CMA,
  DISTANCE.ECID,
  DISTANCE.BAN,
  DISTANCE.SUBSCRIBER_NO,
  DISTANCE.DISTANCECALC                                                             AS STORE_DISTANCE,
  ROW_NUMBER() OVER (PARTITION BY DISTANCE.STORE_ID ORDER BY DISTANCE.DISTANCECALC) AS STORE_DISTANCE_RNK,
  VISIT.TRANS_DATE                                                                  AS STORE_VISIT_DATE,
  ROW_NUMBER() OVER (PARTITION BY DISTANCE.STORE_ID ORDER BY VISIT.TRANS_DATE DESC) AS STORE_VISIT_DATE_RNK,
  'Store Visit and Location Distance'                                               AS LEAD_LOGIC,
  LOCATION_TYPE,
  SQ_FT
FROM NW_TOWER_USAGE.STATFLO_DISTANCE_INT DISTANCE
JOIN NW_TOWER_USAGE.STATFLO_STORE_VISIT VISIT
ON DISTANCE.BAN       = VISIT.BAN
AND DISTANCE.STORE_ID = VISIT.BRSC_ID;

