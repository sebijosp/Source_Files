set hive.tez.container.size=8192;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_OUTPUT_OR_TEMP
SELECT STORE_ID,CHAIN_CODE,LOCATION_ID,BANNER,LOCATION_NAME,CMA,ECID,BAN,SUBSCRIBER_NO,DISTANCECALC,STORE_DISTANCE_RNK,LOCATION_TYPE,SQ_FT
FROM
  (SELECT DISTANCE.*,
    ROW_NUMBER() OVER (PARTITION BY DISTANCE.SUBSCRIBER_NO ORDER BY DISTANCE.DISTANCECALC) AS STORE_DISTANCE_RNK
  FROM NW_TOWER_USAGE.STATFLO_DISTANCE_OR DISTANCE
  ) QRY
WHERE STORE_DISTANCE_RNK = 1;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_OUTPUT_OR
SELECT A.STORE_ID,
  A.CHAIN_CODE,
  A.LOCATION_ID,
  A.BANNER,
  A.LOCATION_NAME,
  A.CMA,
  A.ECID,
  A.BAN,
  A.SUBSCRIBER_NO,
  A.DISTANCECALC                                                      AS STORE_DISTANCE,
  ROW_NUMBER() OVER (PARTITION BY A.STORE_ID ORDER BY A.DISTANCECALC) AS STORE_DISTANCE_RNK,
  CAST(NULL AS TIMESTAMP)                                             AS STORE_VISIT_DATE,
  CAST(NULL AS INT)                                                   AS STORE_VISIT_DATE_RNK,
  'Location Distance Only'                                            AS LEAD_LOGIC,
  A.LOCATION_TYPE,
  A.SQ_FT
FROM NW_TOWER_USAGE.STATFLO_OUTPUT_OR_TEMP A
JOIN
  (SELECT STATFLO.*
  FROM NW_TOWER_USAGE.STATFLO_OUTPUT_OR_TEMP STATFLO
  JOIN ODS.BAN_PRIMARY_SUBSCRIBER BPS
  ON STATFLO.SUBSCRIBER_NO = BPS.SUBSCRIBER_NO
  AND STATFLO.BAN          = BPS.BAN
  ) B ON A.BAN             = B.BAN
AND A.STORE_ID             = B.STORE_ID
LEFT JOIN
  (SELECT BAN FROM NW_TOWER_USAGE.STATFLO_OUTPUT_AND GROUP BY BAN
  ) C
ON A.BAN     = C.BAN
WHERE C.BAN IS NULL;

