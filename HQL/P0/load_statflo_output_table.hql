set hive.tez.container.size=8192;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_OUTPUT_PRE
SELECT STORE_ID,CHAIN_CODE,LOCATION_ID,BANNER,LOCATION_NAME,CMA,ECID,BAN,SUBSCRIBER_NO,STORE_DISTANCE,STORE_DISTANCE_RNK,STORE_VISIT_DATE,STORE_VISIT_DATE_RNK,LEAD_LOGIC,LOCATION_TYPE,SQ_FT
FROM (
SELECT * FROM NW_TOWER_USAGE.STATFLO_OUTPUT_AND
UNION ALL
SELECT * FROM NW_TOWER_USAGE.STATFLO_OUTPUT_OR) A;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_OUTPUT_SECONDARY
SELECT B.STORE_ID,
  B.CHAIN_CODE,
  B.LOCATION_ID,
  B.BANNER,
  B.LOCATION_NAME,
  B.CMA,
  A.ECID,
  A.BAN,
  A.SUBSCRIBER_NO,
  CAST(NULL AS DOUBLE)                      AS STORE_DISTANCE,
  CAST(NULL AS INT)                         AS STORE_DISTANCE_RNK,
  CAST(NULL AS TIMESTAMP)                   AS STORE_VISIT_DATE,
  CAST(NULL AS INT)                         AS STORE_VISIT_DATE_RNK,
  CONCAT(B.LEAD_LOGIC,' - Secondary Leads') AS LEAD_LOGIC,
  B.LOCATION_TYPE,
  B.SQ_FT
FROM NW_TOWER_USAGE.STATFLO_CUST_TEMP A
JOIN
  (SELECT DISTINCT BAN,
    STORE_ID,
    CHAIN_CODE,
    LOCATION_ID,
    BANNER,
    LOCATION_NAME,
    CMA,
    LEAD_LOGIC,
	LOCATION_TYPE,
	SQ_FT
  FROM NW_TOWER_USAGE.STATFLO_OUTPUT_PRE
  ) B
ON A.BAN = B.BAN
LEFT JOIN NW_TOWER_USAGE.STATFLO_OUTPUT_PRE C
ON A.SUBSCRIBER_NO     = C.SUBSCRIBER_NO
WHERE C.SUBSCRIBER_NO IS NULL;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_ACTIVE_OUTPUT
SELECT CAST (STORE_ID AS INT) AS STORE_ID, BANNER,LOCATION_NAME, CMA,ECID,BAN,SUBSCRIBER_NO,STORE_DISTANCE,STORE_DISTANCE_RNK,STORE_VISIT_DATE,STORE_VISIT_DATE_RNK,
CHAIN_CODE,LOCATION_ID,LEAD_LOGIC,LOCATION_TYPE,SQ_FT
FROM (
SELECT STORE_ID, BANNER,LOCATION_NAME, CMA,ECID,BAN,SUBSCRIBER_NO,STORE_DISTANCE,STORE_DISTANCE_RNK,STORE_VISIT_DATE,STORE_VISIT_DATE_RNK,
CHAIN_CODE,LOCATION_ID,LEAD_LOGIC,LOCATION_TYPE,SQ_FT,ROW_NUMBER() OVER (PARTITION BY SUBSCRIBER_NO ORDER BY STORE_VISIT_DATE DESC ) RN
FROM (
SELECT * FROM NW_TOWER_USAGE.STATFLO_OUTPUT_PRE
UNION ALL
SELECT * FROM NW_TOWER_USAGE.STATFLO_OUTPUT_SECONDARY ) A
) B
WHERE RN = 1;

