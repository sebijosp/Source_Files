set hive.tez.container.size=8192;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_WB_STORE_VISIT
SELECT BAN,BRSC_ID,TRANS_DATE,ROW_NUM
FROM
  (SELECT QRY_INNER.BAN,QRY_INNER.BRSC_ID,QRY_INNER.TRANS_DATE,
    ROW_NUMBER() OVER(PARTITION BY QRY_INNER.BAN ORDER BY QRY_INNER.TRANS_DATE DESC) AS ROW_NUM
  FROM
    (SELECT BAN,
      MAX(DISCONNECT_DATE) AS DISCONNECT_DATE
    FROM NW_TOWER_USAGE.STATFLO_WB_CUST_TEMP
    GROUP BY BAN
    ) BASE
  JOIN
    (SELECT BAN,BRSC_ID,TRANS_DATE
    FROM DATA_PODS.POD_RETAILSSP_CTN_DLY
    WHERE BRSC_ID IS NOT NULL
    UNION ALL
    SELECT HASH.ACCOUNT AS BAN,CJA.RETAIL_LOCATION_ID AS BRSC_ID,CJA.TRANS_DT AS TRANS_DATE
    FROM
      (SELECT BAN,TRANS_DT,RETAIL_LOCATION_ID
      FROM APP_CUSTOMER_JOURNEY.CBU_CUST_JOURNEY_RETAIL_FCT
      WHERE FRANCHISE IN ('R','F')
      AND RETAIL_LOCATION_ID IS NOT NULL
      AND TO_DATE(CONCAT(YEAR,'-',MONTH,'-',DAY)) < '${hiveconf:TRANS_DATE}'
      ) CJA
    JOIN HASH_LOOKUP.ECID_BAN_CAN HASH
    ON CJA.BAN = HASH.HASH_ACCOUNT
    ) QRY_INNER
  ON BASE.BAN = QRY_INNER.BAN
  WHERE QRY_INNER.TRANS_DATE BETWEEN ADD_MONTHS(TO_DATE(BASE.DISCONNECT_DATE),-24) AND TO_DATE(BASE.DISCONNECT_DATE)
  ) QRY_OUTER
WHERE ROW_NUM = 1;

INSERT OVERWRITE TABLE NW_TOWER_USAGE.STATFLO_WB_OUTPUT_AND
SELECT
	DISTANCE.STORE_ID,
	DISTANCE.CHAIN_CODE,
	DISTANCE.LOCATION_ID,
	DISTANCE.BANNER,
	DISTANCE.LOCATION_NAME,
	DISTANCE.CMA,
	DISTANCE.ECID,
	DISTANCE.BAN,
	DISTANCE.SUBSCRIBER_NO,
	DISTANCE.DISTANCECALC AS STORE_DISTANCE,
	ROW_NUMBER() OVER (PARTITION BY DISTANCE.STORE_ID ORDER BY DISTANCE.DISTANCECALC) AS STORE_DISTANCE_RNK,
	VISIT.TRANS_DATE AS STORE_VISIT_DATE,
	ROW_NUMBER() OVER (PARTITION BY DISTANCE.STORE_ID ORDER BY VISIT.TRANS_DATE DESC) AS STORE_VISIT_DATE_RNK,
	'Store Visit and Location Distance' AS LEAD_LOGIC,
	LOCATION_TYPE,
	SQ_FT
FROM NW_TOWER_USAGE.STATFLO_WB_DISTANCE_INT DISTANCE
JOIN NW_TOWER_USAGE.STATFLO_WB_STORE_VISIT VISIT
ON DISTANCE.BAN = VISIT.BAN
AND DISTANCE.STORE_ID = VISIT.BRSC_ID;

