INSERT OVERWRITE TABLE DATA_PODS.POD_RETAILSSP_CTN_DLY PARTITION(YEAR,MONTH,DAY)
SELECT SSP.BAN,
 SSP.CTN,
 'Retail SSP' AS TRANS_TYPE,
 SSP.TRANSACTION_TYPE AS TRANS_EVENT,
 SSP.TRANSACTION_STATUS AS TRANS_STATUS,
 SSP.TRANSACTION_DATE AS TRANS_DATE,
 SSP.TRANSACTION_TIME,
 'Inbound' AS TRANSACTION_DIRECTION,
 SSP.DEALER_CODE,
 SSP.TRANSACTION_ID,
 SSP.GROUPED_TRANSACTIONS,
 SSP.STORE_CODE,
 SSP.CHAIN_CODE,
 CASE
  WHEN DIM_STORE.BRSC_ID IS NULL THEN DIM_STORE_ALT.BRSC_ID
  ELSE DIM_STORE.BRSC_ID
 END AS BRSC_ID,
 CASE
  WHEN DIM_STORE.FRANCHISE IS NULL THEN DIM_STORE_ALT.FRANCHISE
  ELSE DIM_STORE.FRANCHISE
 END AS FRANCHISE,
 CASE
  WHEN DIM_STORE.LOCATION_NAME IS NULL THEN DIM_STORE_ALT.LOCATION_NAME
  ELSE DIM_STORE.LOCATION_NAME
 END AS LOCATION_NAME,
 CASE
  WHEN DIM_STORE.CHAIN_NAME IS NULL THEN DIM_STORE_ALT.CHAIN_NAME
  ELSE DIM_STORE.CHAIN_NAME
 END AS CHAIN_NAME,
 CASE
  WHEN DIM_STORE.REGION IS NULL THEN DIM_STORE_ALT.REGION
  ELSE DIM_STORE.REGION
 END AS REGION,
 CASE
  WHEN DIM_STORE.CITY IS NULL THEN DIM_STORE_ALT.CITY
  ELSE DIM_STORE.CITY
 END AS CITY,
 CASE
  WHEN DIM_STORE.PROVINCE IS NULL THEN DIM_STORE_ALT.PROVINCE
  ELSE DIM_STORE.PROVINCE
 END AS PROVINCE,
 CASE
  WHEN DIM_STORE.CHANNEL_TYPE_DESC IS NULL THEN DIM_STORE_ALT.CHANNEL_TYPE_DESC
  ELSE DIM_STORE.CHANNEL_TYPE_DESC
 END AS CHANNEL_TYPE_DESC,
 CASE
  WHEN DIM_STORE.LOCATION_TYPE IS NULL THEN DIM_STORE_ALT.LOCATION_TYPE
  ELSE DIM_STORE.LOCATION_TYPE
 END AS LOCATION_TYPE,
 YEAR(SSP.TRANSACTION_DATE) AS YEAR,
 MONTH(SSP.TRANSACTION_DATE) AS MONTH,
 DAY(SSP.TRANSACTION_DATE) AS DAY
FROM
 (SELECT
  TRANSACTION_ID,
  BAN,
  CTN,
  TRANSACTION_TYPE,
  TRANSACTION_STATUS,
  TO_DATE(SUBSTRING(TRANS_INIT_TIME,1,19)) AS TRANSACTION_DATE,
  CAST(TRANS_INIT_TIME AS TIMESTAMP) AS TRANSACTION_TIME,
  DEALER_CODE,
  STORE_CODE,
  CHAIN_CODE,
  CASE 
   WHEN TRANSACTION_TYPE IN ('Customer Search View', 'Customer Profile View', 'View Puk Code') THEN 'Passive Interaction'
   WHEN TRANSACTION_TYPE IN ('HUP', 'SIM Change', 'Ban Creation', 'HUP Lite', 'Activation(non-port)', 'Priceplan Or Addon Change', 'Activation(port)', 'Activation(non-port)', 'HUP Cancellation') THEN 'Transaction'
   WHEN TRANSACTION_TYPE IN ('One Time Payment', 'Account Billing Change') THEN 'Billing'
   WHEN TRANSACTION_TYPE IN ('Telephone Number Change', 'IMEI Change', 'Account Profile Change', 'Account Address Change', 'Add Authorized User') THEN 'Profile Change'
   WHEN TRANSACTION_TYPE IN ('Add Stolen Device', 'Add Remove Stolen Device', 'Remove Stolen Device') THEN 'Stolen Device'
   ELSE NULL
  END AS GROUPED_TRANSACTIONS
 FROM
  OTH_SOURCE.SSPODS_TRANSACTIONS_MV
 WHERE
  BAN IS NOT NULL 
  AND TO_DATE(SUBSTRING(TRANS_INIT_TIME,1,19)) >= TO_DATE('${hiveconf:TRANS_DATE}')
 ) SSP 
LEFT JOIN
 ODS_BMRT.DIM_STORE_DEALER_CODE DIM_STORE
ON SSP.DEALER_CODE = DIM_STORE.DEALER_CODE
LEFT JOIN
 (SELECT * FROM
  (SELECT *,ROW_NUMBER() OVER(PARTITION BY LOCATION_ID, CHAINOFSTORESCODE ORDER BY LAST_TRANSACTION DESC) AS ROW_NUM
  FROM ODS_BMRT.DIM_STORE_DEALER_CODE QRY
  ) DIM_STORE_INNER
 WHERE ROW_NUM = 1
 ) DIM_STORE_ALT
ON SSP.STORE_CODE = DIM_STORE_ALT.LOCATION_ID
AND SSP.CHAIN_CODE = DIM_STORE_ALT.CHAINOFSTORESCODE
;

